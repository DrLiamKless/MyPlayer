{"version":3,"sources":["contexts/userContext.js","wrappers/network.js","wrappers/ajax.js","components/Loader.js","components/Album.js","components/pages/Home/TopAlbums.js","wrappers/likeFunction.js","analytics/analyticsManager.js","components/Song.js","components/pages/Home/TopSongs.js","components/Playlist.js","components/pages/Home/TopPlaylists.js","components/Artist.js","components/pages/Home/TopArtists.js","components/pages/Home/Home.js","components/Search.js","hooks/debounce.js","components/Sidebar.js","components/Topbar.js","components/pages/Admin/AddSong.js","components/pages/Admin/AddArtist.js","components/pages/Admin/AddAlbum.js","components/pages/Admin/Admin.js","components/pages/Allsongs.js","components/pages/AllArtists.js","components/pages/Allplaylists.js","components/pages/SingleSong.js","components/pages/SingleAlbum.js","components/pages/SinglePlaylist.js","components/pages/SingleArtist.js","components/pages/Player.js","components/pages/NoMatch.js","components/pages/Identification/Login.js","components/pages/Identification/Signup.js","App.js","serviceWorker.js","index.js"],"names":["User","createContext","network","url","body","customConfig","getToken","Cookies","get","headers","config","method","JSON","stringify","fetch","then","response","a","json","data","ok","Promise","reject","status","message","create","read","Loader","className","useStyles","makeStyles","theme","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","duration","shortest","expandOpen","card","backgroundColor","brown","Album","album","classes","Card","CardHeader","avatar","Avatar","alt","src","Artists","artistCoverImg","title","albumName","disableTypography","CardContent","to","id","albumCoverImg","TopAlbums","useState","topAlbums","setTopAlbums","useEffect","res","style","responsive","desktop","breakpoint","max","min","items","tablet","mobile","keyBoardControl","containerClass","itemClass","map","i","key","albumId","likeFunction","song","date","Date","now","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Interactions","isLiked","interaction","userId","songId","playCount","mixpanel","require","init","mixpanelTrackUrlChanged","path","track","mixpanelTrackSongLiked","songName","mixpanelTrackSongUnliked","Song","setSongToPlay","setLikeState","likeState","open","setOpen","playlists","setPlaylists","useForm","addToPlaylist","register","handleAddToPlaylist","handleSubmit","handleClose","artistId","CardActions","disableSpacing","Tooltip","placement","TransitionComponent","Fade","TransitionProps","timeout","IconButton","aria-label","onClick","color","variant","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","noValidate","onSubmit","Select","fullWidth","native","inputRef","name","value","placeholder","playlist","playlistName","Button","type","marginBottom","DialogActions","TopSongs","topSongs","setTopSongs","song_id","Playlist","React","expanded","setExpanded","handleRemoveFromPlaylist","songInPlaylist","createdAt","subheader","userName","playlistCoverImg","clsx","aria-expanded","Collapse","in","unmountOnExit","Typography","Songs","TopPlaylists","topPlaylists","setTopPlaylists","user","useContext","infinite","Playlists","playlist_id","artist","artistName","topArtists","setTopArtists","Artist","artist_id","Home","location","useLocation","pathname","TopArtists","Search","searchInput","setSearchInput","searchSongsOutputs","setSearchSongsOutputs","searchArtistsOutputs","setSearchArtistsOutputs","searchAlbumsOutputs","setSearchAlbumsOutputs","setIsSearching","debouncedSearchInput","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","err","console","error","TextField","onChange","e","target","maxHeight","length","width","fontSize","Sidebar","sideBarOpen","setSideBarOpen","logOut","remove","window","collapsed","image","iconShape","icon","Topbar","paper","marginTop","spacing","display","flexDirection","alignItems","margin","palette","primary","main","form","submit","AddSong","artists","albums","newSong","handleNewSong","Container","component","maxWidth","CssBaseline","required","label","autoFocus","InputLabel","multiline","rows","AddArtist","newArtist","handleNewArtist","AddAlbum","newAlbum","handleNewAlbum","Admin","setArtists","setAlbums","Allsongs","songs","setSongs","root","flexWrap","justifyContent","overflow","background","gridList","titleBar","AllArtists","GridList","cellHeight","GridListTile","artisName","cols","GridListTileBar","titlePosition","actionIcon","actionPosition","Allplaylists","addNewPlaylist","handleAddNewPlaylist","marginRight","textAlign","SingleSong","useParams","singleSongObject","setSingleSongObject","songsFromQuery","setSongsFromQuery","query","URLSearchParams","search","artistQuery","albumQuery","playlistQuery","queryKey","queryValue","List","ListSubheader","filter","ListItem","role","undefined","dense","ListItemText","ListItemSecondaryAction","edge","handleLike","SingleAlbum","singleAlbum","setSingleAlbum","button","SinglePlaylist","props","singleSong","singlePlaylistObject","setSinglePlaylistObject","singleArtist","setSingleArtist","Player","songToPlay","youtubeLink","allow","frameBorder","NoMatch","errorSong","youtube_link","lyrics","Login","setUser","errors","handleLogin","success","log","minLength","email","SignUp","signUp","handleSignUp","App","logged","setLogged","loading","setLoading","userLogged","Provider","exact","SingleArtist","Signup","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.54db44c9.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const User = createContext();\r\n","import Cookies from 'js-cookie';\r\n\r\nexport default function network(url ,body, {...customConfig} = {}) {\r\n  \r\n  const getToken = () => Cookies.get('accessToken');\r\n\r\n\r\n  const headers = {\r\n    \"Content-Type\": \"application/json; charrset=utf-8\",\r\n    \"Authorization\": \"bearer \" + getToken()\r\n  };\r\n\r\n  const config = {\r\n    method: body ? 'POST' : 'GET',\r\n    ...customConfig,\r\n    headers: {\r\n      ...headers,\r\n      ...customConfig.headers\r\n    },\r\n  }\r\n\r\n  if (body != null) {\r\n    config.body = JSON.stringify(body);\r\n  } \r\n\r\n  return fetch(url, config)   \r\n    .then(async response => {\r\n      const data = await response.json()\r\n      if (response.ok) {\r\n        return data\r\n      } else {\r\n        return Promise.reject(`${response.status} : ''${data.message}'`);\r\n      }\r\n    })\r\n}\r\n","import network from \"./network\"\r\n\r\nexport function create(url, body) { // todo: use await\r\n  return network(url, body)\r\n}\r\n\r\nexport function read(url) {\r\n  return network(url)\r\n}\r\n\r\nexport function destroy(url, body) {\r\n  return network(url, body, {method: 'DELETE'})\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\n\r\nfunction Loader() {\r\n\r\n    return (\r\n        <div className={'loaderContainr'}>\r\n            <div className=\"loader\"></div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { brown } from '@material-ui/core/colors';\r\nimport Loader from './Loader'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    card: {\r\n      backgroundColor: brown[500],\r\n    },\r\n  }));\r\n \r\n\r\nfunction Album({ album }) {\r\n\r\n    const classes = useStyles();\r\n\r\n  return (\r\n    album ?\r\n    <div className={\"card\"}>\r\n      <Card className={classes.card}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar alt=\"artist img\" src={album.Artists[0] && album.Artists[0].artistCoverImg}>\r\n            </Avatar>\r\n          }\r\n          title={album.albumName}\r\n          disableTypography={false}\r\n        ></CardHeader>\r\n        <CardContent>\r\n          <Link to={`/album/${album.id}`}>\r\n          <div className={\"logo-container\"}>\r\n            {<img src={album.albumCoverImg} className=\"card-logo\" alt=\"logo\" />}\r\n          </div>\r\n          </Link>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n    : <Loader/>\r\n  )\r\n}\r\n\r\nexport default Album;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport { read } from \"../../../wrappers/ajax\"\r\nimport 'fontsource-roboto';\r\nimport Album from '../../Album'\r\nimport Loader from '../../Loader'\r\n\r\n\r\nfunction TopAlbums() {\r\n\r\n    const [topAlbums, setTopAlbums] = useState()\r\n\r\n    useEffect(() => {\r\n      read(\"/api/v1/albums/top\").then((res) => {\r\n        setTopAlbums(res)\r\n      });\r\n    }, []);\r\n\r\n    const responsive = {\r\n      desktop: {\r\n      breakpoint: { max: 1280, min: 1024 },\r\n      items: 6,\r\n      },\r\n      tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2,\r\n      },\r\n      mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 2,\r\n      },\r\n  }\r\n  \r\n  return (\r\n  topAlbums != null ?\r\n  <>\r\n    <div className={\"home-section\"} style={{backgroundColor: \"rgba(0,31,63,0.79)\"}}>\r\n    <h5>Your most favorite albums</h5>\r\n      <Carousel\r\n        responsive={responsive}\r\n        keyBoardControl={true}\r\n        containerClass=\"carousel-container\"\r\n        itemClass=\"carousel-item\">\r\n          {topAlbums.map((album, i) => (\r\n            <Album\r\n            key={album.albumId}\r\n            album={album}\r\n      />\r\n            ))}\r\n      </Carousel>\r\n    </div>     \r\n  </>\r\n  : <Loader/>\r\n  ) \r\n}\r\n\r\nexport default TopAlbums;\r\n","import { create } from '../wrappers/ajax';\r\n\r\nexport default function likeFunction (song) {\r\n    function removeLinebreaks( str ) { \r\n      return str.replace( /[\\r\\n]+/gm, \"\" ); \r\n  } \r\n    const date = new Date(Date.now())\r\n    const dateToShow = `${date.getFullYear()}-${(date.getMonth() + 1)}-${date.getDate()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\r\n  \r\n\r\n    if (!song.Interactions[0]) {\r\n      const interaction = {\r\n        userId: 1, \r\n        songId: song.id,\r\n        isLiked: 1,\r\n        playCount: 1,\r\n      }\r\n      create(`/api/v1/songs/like/${song.id}`, interaction)\r\n    } else {\r\n      create(`/api/v1/songs/like/${song.id}`, {isLiked: song.Interactions[0].isLiked === true ? false : true})\r\n    }\r\n  }","var mixpanel = require('mixpanel-browser');\r\n\r\nmixpanel.init(\"604c09ff43a4102330d4013e7061ee7e\");\r\n\r\nexport const mixpanelTrackLoggedIn = () => mixpanel.track(\"Logged In\");\r\n\r\nexport const mixpanelTrackEnteredLoginPage = () => mixpanel.track(\"Entered Login Page Page\");\r\n\r\nexport const mixpanelTrackUrlChanged = (path) => mixpanel.track(\"URL Changed\", {\"path\": path});\r\n\r\nexport const mixpanelTrackSongPlayed = (songName) => mixpanel.track(\"Song Played\", {\"name\": songName});\r\n\r\nexport const mixpanelTrackSongLiked = (songName) => mixpanel.track(\"Song Liked\", {\"name\": songName});\r\n\r\nexport const mixpanelTrackSongUnliked = (songName) => mixpanel.track(\"Song Unliked\", {\"name\": songName});\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { brown } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport { Link } from 'react-router-dom';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { read, create } from '../wrappers/ajax';\r\nimport likeFunction from \"../wrappers/likeFunction\"\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Select from '@material-ui/core/Select';\r\nimport {useForm} from 'react-hook-form';\r\nimport Loader from './Loader';\r\nimport { mixpanelTrackSongPlayed, mixpanelTrackSongLiked, mixpanelTrackSongUnliked } from '../analytics/analyticsManager'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    card: {\r\n      backgroundColor: brown[500],\r\n    },\r\n  }));\r\n \r\n\r\nfunction Song({ song, setSongToPlay, setLikeState, likeState}) {\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [playlists, setPlaylists] = useState([]);\r\n    const {register: addToPlaylist, handleSubmit: handleAddToPlaylist} = useForm()\r\n\r\n\r\n    useEffect(() => {\r\n      read(\"api/v1/playlists\").then((res) => {\r\n        setPlaylists(res)\r\n      });\r\n    }, [open]);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const onAddToPlaylist = data => {\r\n      create(\"api/v1/playlists/addSong\", data);\r\n      handleClose()\r\n    } \r\n\r\n    const handleLike = () => {\r\n      likeFunction(song); \r\n      setLikeState(!likeState); \r\n      likeState ? \r\n      mixpanelTrackSongUnliked(song.songName)\r\n      : mixpanelTrackSongLiked(song.songName) \r\n    }\r\n\r\n  return (\r\n    song ?\r\n    <div className={\"card\"}>\r\n      <Card className={classes.card}>\r\n        <CardHeader\r\n          avatar={<Avatar alt=\"artist img\" src={song.Artists[0] && song.Artists[0].artistCoverImg}/>}\r\n          title={song.songName}\r\n          disableTypography={false}\r\n        ></CardHeader>\r\n        <CardContent className={\"logo-container\"}>\r\n        <Link to={`/song/${song.id}?artist=${song.artistId}`}>\r\n        {<img src={\"https://assets.onlinelabels.com/images/clip-art/BenBois/BenBois_Vinyl_records.png\"} className=\"song-logo\" alt=\"logo\" />}\r\n        </Link>\r\n        </CardContent>\r\n        <CardActions disableSpacing>\r\n          <Tooltip \r\n          title={\"add/remove from favorites\"} placement={\"bottom\"}\r\n          TransitionComponent={Fade} TransitionProps={{ timeout: 600 }}>\r\n            <IconButton\r\n              aria-label=\"Like\"\r\n              onClick={handleLike}>\r\n              <FavoriteIcon \r\n              color={song.Interactions[0] && song.Interactions[0].isLiked === true ? 'secondary' : 'inherit'}>\r\n              </FavoriteIcon>\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip \r\n          title=\"play\" placement={\"bottom\"}\r\n          TransitionProps={{ timeout: 600 }}>\r\n            <IconButton aria-label=\"play\" onClick={()=>{setSongToPlay(song); mixpanelTrackSongPlayed(song.songName)}}>\r\n              <PlayArrowIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip \r\n          title=\"add to playlist\" placement={\"bottom\"}\r\n          TransitionProps={{ timeout: 600 }}>\r\n            <IconButton aria-label=\"add\" variant=\"outlined\" onClick={handleClickOpen}>\r\n              <AddIcon/>\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Add to Playlist</DialogTitle>\r\n        <DialogContent>\r\n        </DialogContent>\r\n          <form  \r\n            noValidate onSubmit={handleAddToPlaylist(onAddToPlaylist)}>\r\n            <div>\r\n              <Select fullWidth native inputRef={addToPlaylist} name=\"songId\" variant=\"outlined\">\r\n              <option value={song.id}>{song.songName}</option>\r\n              </Select>\r\n              <Select fullWidth placeholder=\"playlists\" native inputRef={addToPlaylist} name=\"playlistId\" variant=\"outlined\">\r\n              {playlists.map(playlist => (<option key={playlist.playlistName} value={playlist.id}>{playlist.playlistName}</option>))}\r\n              </Select>\r\n            </div>\r\n          <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          style={{marginBottom:\"5px\"}}\r\n          inputRef={addToPlaylist}>\r\n            Add\r\n          </Button>\r\n          <Button onClick={handleClose}\r\n          color=\"primary\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          </form>\r\n        <DialogActions>\r\n        </DialogActions>\r\n      </Dialog>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n    : <Loader/>\r\n  )\r\n}\r\n\r\nexport default Song;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { User } from '../../../contexts/userContext';\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport { read } from \"../../../wrappers/ajax\"\r\nimport 'fontsource-roboto';\r\nimport Song from '../../Song'\r\nimport Loader from '../../Loader'\r\n\r\n\r\nfunction TopSongs({ setSongToPlay }) {\r\n\r\n  const [topSongs, setTopSongs] = useState();\r\n  const [likeState, setLikeState] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    read(\"/api/v1/songs/top\").then((res) => {\r\n      setTopSongs(res)\r\n    });\r\n  }, [likeState]);\r\n  \r\n  const responsive = {\r\n    desktop: {\r\n    breakpoint: { max: 1280, min: 1024 },\r\n    items: 6,\r\n    },\r\n    tablet: {\r\n    breakpoint: { max: 1024, min: 464 },\r\n    items: 2,\r\n    },\r\n    mobile: {\r\n    breakpoint: { max: 464, min: 0 },\r\n    items: 2,\r\n    },\r\n  }\r\n\r\n  return (\r\n    topSongs != null ?\r\n    <>\r\n      <div className={\"home-section\"} style={{backgroundColor: \"rgb(99,84,65)\"}}>\r\n      <h5>Your Most Favorite Songs</h5>\r\n              <Carousel\r\n                responsive={responsive}\r\n                keyBoardControl={true}\r\n                containerClass=\"carousel-container\"\r\n                itemClass=\"carousel-item\">\r\n                {topSongs.map((song, i) => (\r\n                  <Song\r\n                  key={song.song_id}\r\n                  song={song}\r\n                  setSongToPlay={setSongToPlay}\r\n                  likeState={likeState}\r\n                  setLikeState={setLikeState}/>\r\n                ))}\r\n              </Carousel>\r\n      </div>     \r\n    </>\r\n    : <Loader/>\r\n  );\r\n}\r\n\r\nexport default TopSongs;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { read, destroy } from \"../wrappers/ajax\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport { Link } from 'react-router-dom';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { brown } from '@material-ui/core/colors';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport Loader from './Loader'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    media: {\r\n      height: 120,\r\n      paddingTop: '56.25%', // 16:9\r\n    \r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    card: {\r\n      backgroundColor: brown[500],\r\n    },\r\n  }));\r\n \r\n\r\nfunction Playlist({ playlist }) {\r\n\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n      setExpanded(!expanded);\r\n    };\r\n\r\n    const handleRemoveFromPlaylist = (songId) => {\r\n      read(`/api/v1/playlists/songInPlaylist/${songId}/${playlist.id}`).then(songInPlaylist => {\r\n        destroy(`api/v1/playlists/removeSong/${songInPlaylist.id}`);\r\n      })\r\n    }\r\n\r\n\r\nconst date = new Date(playlist.createdAt);\r\n  return (\r\n    playlist.playlistName ? \r\n    <div className={\"card\"} >\r\n    <Card className={classes.card}>\r\n        <CardHeader\r\n          title={playlist.playlistName}\r\n          subheader={date.getFullYear()+'-' + (date.getMonth()+1) + '-'+date.getDate() + ' by ' + playlist['Users'][0].userName}\r\n        />\r\n        <Link to={`/playlist/${playlist.id}`}>\r\n          <CardContent className={\"logo-container\"}>\r\n            <img src={playlist.playlistCoverImg} className=\"playlist-logo\" alt=\"logo\"></img>\r\n          </CardContent>\r\n        </Link>\r\n        <CardActions disableSpacing>\r\n            <IconButton\r\n              className={clsx(classes.expand, {\r\n                [classes.expandOpen]: expanded,\r\n              })}\r\n              onClick={handleExpandClick}\r\n              aria-expanded={expanded}\r\n              aria-label=\"show songs list\"\r\n            >\r\n              <ExpandMoreIcon />\r\n            </IconButton>\r\n          </CardActions>\r\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n            <CardContent>\r\n                <Typography>songs:</Typography>\r\n              <ul>\r\n                {playlist.Songs.map((song, i) => (\r\n                  <li \r\n                    key={i}\r\n                    className={\"playlist-list-item\"}>\r\n                      <Link \r\n                      to={`/song/${song.id}?playlist=${playlist.id}`}\r\n                      style={{color: 'black'}}>\r\n                        <h5>{song.songName}</h5>\r\n                      </Link>\r\n                    <IconButton\r\n                    aria-label=\"remove from playlist\"\r\n                    onClick={()=>{handleRemoveFromPlaylist(song.id)}}>\r\n                      <RemoveIcon/>\r\n                    </IconButton>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </CardContent>\r\n          </Collapse>\r\n      </Card>\r\n    </div>\r\n    : <Loader/>\r\n  )\r\n}\r\n\r\nexport default Playlist;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { read } from \"../../../wrappers/ajax\"\r\nimport { User } from '../../../contexts/userContext';\r\nimport 'fontsource-roboto';\r\nimport Playlist from '../../Playlist'\r\nimport Carousel from 'react-multi-carousel';\r\nimport Loader from '../../Loader'\r\n\r\n\r\nfunction TopPlaylists() {\r\n\r\n    const [topPlaylists, setTopPlaylists] = useState(\"\")\r\n    const user = useContext(User)\r\n\r\n    useEffect(() => {\r\n      read(`/api/v1/playlists/top/${user.id}`).then((res) => {\r\n        setTopPlaylists(res)\r\n      });\r\n    }, []);\r\n\r\n    const responsive = {\r\n      desktop: {\r\n      breakpoint: { max: 1280, min: 1024 },\r\n      items: 6,\r\n      },\r\n      tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2,\r\n      },\r\n      mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 2,\r\n      },\r\n  }\r\n\r\n  \r\n  return (\r\n    <div className={\"home-section\"} style={{backgroundColor: \"rgba(0,31,63,0.79)\"}}>\r\n   { topPlaylists[0] ?\r\n    <>\r\n        <p>{User.userName}, those are your Most Favorite Playlists</p>\r\n        <Carousel\r\n              responsive={responsive}\r\n              keyBoardControl={true}\r\n              containerClass=\"carousel-container\"\r\n              itemClass=\"carousel-item\"\r\n              infinite\r\n              >\r\n            {topPlaylists[0].Playlists.map((playlist, i) => (\r\n          <Playlist\r\n            key={playlist.playlist_id}\r\n            playlist={playlist}\r\n          >\r\n          </Playlist>\r\n            ))}\r\n        </Carousel>\r\n    </>\r\n        : <div>No Playlists Yet</div> \r\n        }\r\n    </div>     \r\n\r\n  );\r\n}\r\n\r\nexport default TopPlaylists;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { brown } from '@material-ui/core/colors';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from './Loader'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  card: {\r\n    backgroundColor: brown[500],\r\n  },\r\n}));\r\n \r\n\r\nfunction Song({ artist, setSongToPlay }) {\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n  return (\r\n    artist.id ?\r\n    <div className={\"card\"}>\r\n      <Card className={classes.card}>\r\n        <CardHeader\r\n          disableTypography={false}\r\n          title={artist.artistName}\r\n        >\r\n        </CardHeader>\r\n        <CardContent className={\"album-container\"}>\r\n          <Link to={`/artist/${artist.id}`}>\r\n          <div className={\"logo-container\"}>\r\n            {<img src={artist.artistCoverImg} className=\"card-logo\" alt=\"logo\" />}\r\n          </div>\r\n          </Link> \r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n    : <Loader/>\r\n  )\r\n}\r\n\r\nexport default Song;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport { read } from \"../../../wrappers/ajax\"\r\nimport 'fontsource-roboto';\r\nimport Artist from '../../Artist'\r\n\r\nfunction TopAlbums() {\r\n\r\n    const [topArtists, setTopArtists] = useState([])\r\n\r\n    useEffect(() => {\r\n      read(\"/api/v1/artists/top\").then((res) => {\r\n        setTopArtists(res)\r\n      });\r\n    }, []);\r\n\r\n    const responsive = {\r\n      desktop: {\r\n      breakpoint: { max: 1280, min: 1024 },\r\n      items: 20,\r\n      },\r\n      tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2,\r\n      },\r\n      mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 2,\r\n      },\r\n  }\r\n  \r\n  return (\r\n  <>\r\n    <div className={\"home-section\"} style={{backgroundColor: \"rgb(99,84,65)\"}}>\r\n    <h5>Your most favorite artists</h5>\r\n      <Carousel\r\n        responsive={responsive}\r\n        keyBoardControl={true}\r\n        containerClass=\"carousel-container\"\r\n        itemClass=\"carousel-item\">\r\n        {topArtists.map((artist, i) => (\r\n          <Artist className={\"song\"}\r\n          key={artist.artist_id}\r\n          artist={artist}>\r\n          </Artist>\r\n        ))}\r\n      </Carousel>\r\n    </div>     \r\n  </>\r\n  );\r\n}\r\n\r\nexport default TopAlbums;\r\n","import React, { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport 'fontsource-roboto';\r\nimport TopAlbums from './TopAlbums'\r\nimport TopSongs from './TopSongs'\r\nimport TopPlaylists from './TopPlaylists'\r\nimport TopArtists from './TopArtists'\r\nimport { mixpanelTrackUrlChanged } from '../../../analytics/analyticsManager'\r\n\r\nfunction Home({ setSongToPlay }) {\r\n\r\n  const location = useLocation();\r\n  \r\n  useEffect(() => {\r\n    mixpanelTrackUrlChanged(location.pathname)\r\n  },[])\r\n  \r\n  return (\r\n  <div className=\"page\">\r\n      <TopSongs setSongToPlay={setSongToPlay}></TopSongs>\r\n      <TopAlbums></TopAlbums>\r\n      <TopArtists></TopArtists>\r\n      <TopPlaylists></TopPlaylists>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport 'fontsource-roboto';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport { read } from '../wrappers/ajax';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport useDebounce from '../hooks/debounce'\r\n\r\n\r\nfunction Search() {\r\n\r\n    const [searchInput, setSearchInput] = useState();\r\n    const [searchSongsOutputs, setSearchSongsOutputs] = useState([]);\r\n    const [searchArtistsOutputs, setSearchArtistsOutputs] = useState([]);\r\n    const [searchAlbumsOutputs, setSearchAlbumsOutputs] = useState([]);\r\n    const [isSearching, setIsSearching] = useState(false)\r\n    const debouncedSearchInput = useDebounce(searchInput, 500);\r\n\r\n    useEffect(() => {\r\n        if(debouncedSearchInput) {\r\n            setIsSearching(true);\r\n            try {\r\n                read(`api/v1/search/songs/${searchInput}`).then((res) => {\r\n                    setSearchSongsOutputs(res);\r\n                });\r\n                read(`api/v1/search/artists/${searchInput}`).then((res) => {\r\n                    setSearchArtistsOutputs(res);\r\n                });\r\n                read(`api/v1/search/albums/${searchInput}`).then((res) => {\r\n                    setSearchAlbumsOutputs(res);\r\n                    setIsSearching(false);\r\n                });\r\n            } catch (err) {\r\n                console.error(err);\r\n            } \r\n         }\r\n    }, [debouncedSearchInput]);\r\n\r\n    useEffect(() => {\r\n        setSearchSongsOutputs([])\r\n        setSearchArtistsOutputs([])\r\n        setSearchAlbumsOutputs([])\r\n    },[searchInput])\r\n\r\n  return (  \r\n            <div>\r\n                <TextField onChange={(e)=>setSearchInput(e.target.value)}></TextField>\r\n                <IconButton aria-label=\"delete\">\r\n                <SearchIcon></SearchIcon>\r\n                </IconButton>\r\n                <div style={{maxHeight:\"200px\"}}>\r\n                    {searchSongsOutputs.length > 0 && <h5>songs:</h5>}\r\n                    {searchInput && searchSongsOutputs.map(song =>(\r\n                            <div key={song.id}  style={{width: \"max-content\", fontSize: \"12px\"}}>\r\n                                <Tooltip \r\n                                    placement={\"bottom\"}\r\n                                    TransitionComponent={Fade}\r\n                                    TransitionProps={{ timeout: 600 }}\r\n                                    title={`by ${song.Artists[0]?.artistName}`}>\r\n                                    <span>{song.songName}</span>\r\n                                </Tooltip>\r\n                                    <IconButton>\r\n                                <Link to={`/song/${song.id}?artist=${song.Artists[0]?.id}`}>\r\n                                        <Avatar alt=\"artist img\" src={song.Artists[0]?.artistCoverImg}/>                                    </Link>\r\n                                    </IconButton>\r\n                            </div> \r\n                        ))}\r\n                    {searchArtistsOutputs.length > 0 && <h5>artists:</h5>}\r\n                        {searchInput && searchArtistsOutputs.map(artist =>(\r\n                            <div key={artist.id}  style={{width: \"max-content\", fontSize: \"12px\"}}>\r\n                                    <IconButton>\r\n                                <Link to={`/artist/${artist.id}`}>\r\n                                        <Avatar alt=\"artist img\" src={artist.artistCoverImg}/>                                    </Link>\r\n                                    </IconButton>\r\n                                    <span>{artist.artistName}</span>\r\n                            </div> \r\n                        ))}\r\n                    {searchAlbumsOutputs.length > 0 && <h5>albums:</h5>}\r\n                        { searchInput && searchAlbumsOutputs.map(album =>(\r\n                            <div key={album.id}  style={{width: \"max-content\", fontSize: \"12px\"}}>\r\n                                <Tooltip \r\n                                    placement={\"bottom\"}\r\n                                    TransitionComponent={Fade}\r\n                                    TransitionProps={{ timeout: 600 }}\r\n                                    title={album.Artists[0] && `by ${album.Artists[0]?.artistName}`}>\r\n                                    <span>{album.albumName}</span>\r\n                                </Tooltip>\r\n                                    <IconButton>\r\n                                <Link to={`/album/${album.id}`}>\r\n                                        <Avatar alt=\"artist img\" src={album.albumCoverImg}/>                                    </Link>\r\n                                    </IconButton>\r\n                            </div> \r\n                        ))}\r\n                </div>\r\n            </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import { useState, useEffect } from 'react';\r\n\r\n// Our hook\r\nexport default function useDebounce(value, delay) {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    [value] \r\n  );\r\n\r\n  return debouncedValue;\r\n}","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\nimport 'fontsource-roboto';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport Search from './Search'\r\n\r\n\r\nfunction Sidebar() {\r\n\r\n    const [sideBarOpen, setSideBarOpen] = useState(true)\r\n\r\n    const logOut = async () => {\r\n        try {\r\n            Cookies.remove(\"accessToken\")\r\n            Cookies.remove(\"refreshToken\")\r\n            Cookies.remove(\"id\")\r\n          window.location = '/';\r\n        } catch (error) {\r\n          console.error(error)\r\n        }\r\n      }\r\n\r\n  return (\r\n    <div>\r\n        <ProSidebar id={\"side-bar\"} collapsed={sideBarOpen}\r\n        image={\"https://media.pri.org/s3fs-public/story/images/Music%20Listening.jpg\"}\r\n        >\r\n            <Menu iconShape=\"circle\">\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <MenuItem icon={<MenuIcon/>} onClick={()=>{setSideBarOpen(!sideBarOpen)}}></MenuItem>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <MenuItem icon={<HomeIcon/>}>\r\n                Home\r\n            <Link to=\"/\" />\r\n            </MenuItem>\r\n            <SubMenu title=\"My user\" icon={<AccountCircleIcon/>}>\r\n                <MenuItem>settings</MenuItem>\r\n                <MenuItem>Admin <Link to=\"/Admin\"/></MenuItem>\r\n            </SubMenu>\r\n            <MenuItem icon={<AudiotrackIcon/>}>\r\n                All songs \r\n            <Link to=\"/Allsongs\" />\r\n            </MenuItem>\r\n            <MenuItem icon={<RecordVoiceOverIcon/>}>\r\n                All Artists \r\n            <Link to=\"/AllArtists\"/>\r\n            </MenuItem>\r\n            <MenuItem icon={<LibraryMusicIcon/>}>\r\n                All Playlists \r\n            <Link to=\"/Allplaylists\"/>\r\n            </MenuItem>\r\n            <SubMenu title=\"Search\" icon={<SearchIcon/>}>\r\n                <Search></Search>\r\n            </SubMenu>\r\n                <MenuItem icon={<ExitToAppIcon/>} onClick={logOut}>\r\n                    log out\r\n                </MenuItem>\r\n            </Menu>\r\n        </ProSidebar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Topbar() {\r\n\r\n  return (\r\n    <div id={\"top-bar\"}>\r\n      <Link to={'/'}>\r\n      <img src={\"https://i.pinimg.com/originals/2f/cc/e8/2fcce87dd6b29a3a8615cb9e6f434af6.png\"} alt={\"app-icon\"}></img>\r\n      </Link>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Topbar;\r\n","import React from 'react';\r\nimport { create } from \"../../../wrappers/ajax\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useForm} from 'react-hook-form'\r\nimport Loader from '../../Loader'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));;\r\n\r\nfunction AddSong({ artists, albums }) {\r\n  const classes = useStyles();\r\n\r\n  const {register: newSong, handleSubmit: handleNewSong} = useForm()\r\n\r\n \r\n\r\n  const onSubmitSong = data => {\r\n    create(\"api/v1/songs/add\", data)\r\n  } \r\n\r\n  \r\n  return (\r\n    artists & albums ?\r\n    <div className={\"home-section\"} style={{backgroundColor: \"rgb(99,84,65)\"}}>\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <AudiotrackIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Add a new song\r\n        </Typography>\r\n        <form  \r\n          className={classes.form} \r\n          noValidate onSubmit={handleNewSong(onSubmitSong)}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={newSong}\r\n            required\r\n            fullWidth\r\n            label=\"Youtube Link (Embded Code)\"\r\n            name=\"youtube_link\"\r\n            autoFocus\r\n          />\r\n        <div className={\"add-artist-container\"}>\r\n            <div>\r\n              <InputLabel id=\"label\">album</InputLabel>\r\n              <Select placeholder=\"albums\" native inputRef={newSong} name=\"album_id\" variant=\"outlined\">\r\n              {albums.map(album => (<option key={album.albumName} value={album.id}>{album.albumName}</option>))}\r\n              </Select>\r\n            </div>\r\n            <div className=\"add-artist-modal\">\r\n            </div>\r\n        </div>\r\n        <div className={\"add-artist-container\"}>\r\n            <div>\r\n              <InputLabel id=\"label\">Artist</InputLabel>\r\n              <Select placeholder=\"artists\" native inputRef={newSong} name=\"artist_id\" variant=\"outlined\">\r\n              {artists.map(artist => (<option key={artist.artistName} value={artist.id}>{artist.artistName}</option>))}\r\n              </Select>\r\n            </div>\r\n            <div className=\"add-artist-modal\">\r\n            </div>\r\n        </div>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={newSong}\r\n            required\r\n            fullWidth\r\n            name=\"songeName\"\r\n            label=\"Name\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={newSong}\r\n            required\r\n            fullWidth\r\n            name=\"length\"\r\n            label=\"Length: HH:MM:SS\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={newSong}\r\n            required\r\n            fullWidth\r\n            name=\"trackNumber\"\r\n            label=\"Track number (in album)\"\r\n          />\r\n            <TextField\r\n            variant=\"outlined\"\r\n            multiline\r\n            rows={4}\r\n            margin=\"normal\"\r\n            inputRef={newSong}\r\n            required\r\n            fullWidth\r\n            name=\"lyrics\"\r\n            label=\"Lyrics\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={newSong}\r\n            required\r\n            fullWidth\r\n            name=\"createdAt\"\r\n            label=\"Created at: YY-MM-DD\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={newSong}\r\n            required\r\n            fullWidth\r\n            name=\"uploadAt\"\r\n            label=\"Upload at: YY-MM-DD HH:MM:SS\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Add song\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n    </div>\r\n    : <Loader/>\r\n  );\r\n}\r\n\r\nexport default AddSong;\r\n","import React from 'react';\r\nimport { create } from \"../../../wrappers/ajax\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useForm} from 'react-hook-form'\r\nimport Loader from '../../Loader'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: 'center'\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));;\r\n\r\n\r\nfunction AddArtist() {\r\n  const classes = useStyles();\r\n  const {register: newArtist, handleSubmit: handleNewArtist} = useForm()\r\n\r\n  const onSubmitArtist = data => {\r\n    create(\"api/v1/artists/add\", data)\r\n  } \r\n\r\n  return (\r\n    <div className={\"home-section\"} style={{backgroundColor: \"rgba(43,19,21,0.9)\"}}>\r\n    <Container component=\"main\" maxWidth=\"xs\" >\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <RecordVoiceOverIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Add a new artist\r\n        </Typography>\r\n        <form  \r\n            className={classes.form}\r\n            noValidate onSubmit={handleNewArtist(onSubmitArtist)}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                inputRef={newArtist}\r\n                required\r\n                fullWidth\r\n                name=\"artistName\"\r\n                label=\"Name\"\r\n            />\r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                inputRef={newArtist}\r\n                required\r\n                fullWidth\r\n                name=\"artistCoverImg\"\r\n                label=\"Cover image\"\r\n            />\r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                inputRef={newArtist}\r\n                required\r\n                fullWidth\r\n                name=\"uploadAt\"\r\n                label=\"Upload at: YY-MM-DD HH:MM:SS\"\r\n            />\r\n            <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                inputRef={newArtist}\r\n            >\r\n                Add artist\r\n            </Button>\r\n            </form>\r\n            </div>\r\n    </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddArtist;\r\n","import React from 'react';\r\nimport { create } from \"../../../wrappers/ajax\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useForm} from 'react-hook-form'\r\nimport Loader from '../../Loader'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: 'center'\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));;\r\n\r\n\r\nfunction AddAlbum({ artists }) {\r\n  const classes = useStyles();\r\n  const {register: newAlbum, handleSubmit: handleNewAlbum} = useForm()\r\n\r\n  const onSubmitAlbum = data => {\r\n    create(\"api/v1/albums/add\", data)\r\n  } \r\n  \r\n  return (\r\n    artists != null ?\r\n    <div className={\"home-section\"} style={{backgroundColor: \"rgba(0,31,63,0.8)\"}} >\r\n    <Container component=\"main\" maxWidth=\"xs\" >\r\n    <CssBaseline />\r\n    <div className={classes.paper}>\r\n      <Avatar className={classes.avatar}>\r\n        <LibraryMusicIcon />\r\n      </Avatar>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Add a new Album\r\n      </Typography>\r\n        <form  \r\n            className={classes.form}\r\n            noValidate onSubmit={handleNewAlbum(onSubmitAlbum)}>\r\n            <div>\r\n              <InputLabel id=\"label\">Artist</InputLabel>\r\n              <Select fullWidth placeholder=\"artists\" native inputRef={newAlbum} name=\"artist_id\" variant=\"outlined\">\r\n              {artists.map(artist => (<option key={artist.artistName} value={artist.id}>{artist.artistName}</option>))}\r\n              </Select>\r\n            </div>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                inputRef={newAlbum}\r\n                required\r\n                fullWidth\r\n                name=\"albumName\"\r\n                label=\"Name\"\r\n            />\r\n            <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={newAlbum}\r\n            required\r\n            fullWidth\r\n            name=\"albumCoverImg\"\r\n            label=\"album cover image\"\r\n            />\r\n            <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={newAlbum}\r\n            required\r\n            fullWidth\r\n            name=\"createdAt\"\r\n            label=\"Created at: YY-MM-DD\"\r\n          />\r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                inputRef={newAlbum}\r\n                required\r\n                fullWidth\r\n                name=\"uploadAt\"\r\n                label=\"Upload at: YY-MM-DD HH:MM:SS\"\r\n            />\r\n            <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                fullWidth\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                inputRef={newAlbum}\r\n            >\r\n                Add album\r\n            </Button>\r\n            </form>\r\n            </div>\r\n    </Container>\r\n    </div>\r\n    : <Loader/>\r\n  );\r\n}\r\n\r\nexport default AddAlbum;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { read } from \"../../../wrappers/ajax\"\r\nimport AddSong from './AddSong';\r\nimport AddArtist from './AddArtist';\r\nimport AddAlbum from './AddAlbum';\r\nimport { mixpanelTrackUrlChanged } from '../../../analytics/analyticsManager'\r\n\r\nfunction Admin() {\r\n  const [artists, setArtists] = useState([])\r\n  const [albums, setAlbums] = useState([]);\r\n\r\n  const location = useLocation();\r\n  \r\n  useEffect(() => {\r\n    mixpanelTrackUrlChanged(location.pathname)\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    read(\"api/v1/artists\").then((res) => {\r\n      setArtists(res)\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    read(\"api/v1/albums\").then((res) => {\r\n      setAlbums(res)\r\n    });\r\n  }, []);\r\n  \r\n  return (\r\n\r\n    <div className=\"App\" >\r\n    <header className=\"App-header\">\r\n      <AddSong albums={albums} artists={artists}></AddSong>\r\n      <AddAlbum artists={artists}></AddAlbum>\r\n      <AddArtist></AddArtist>\r\n    </header>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { read } from \"../../wrappers/ajax\"\r\nimport Song from '../Song'\r\nimport Loader from '../Loader'\r\nimport { mixpanelTrackUrlChanged } from '../../analytics/analyticsManager'\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Allsongs({ setSongToPlay }) {\r\n\r\n    const [songs, setSongs] = useState([]);\r\n    const [likeState, setLikeState] = useState(false);\r\n    const location = useLocation();\r\n  \r\n    useEffect(() => {\r\n      mixpanelTrackUrlChanged(location.pathname)\r\n    },[])\r\n\r\n\r\n    useEffect(() => {\r\n      read(\"/api/v1/songs\").then((res) => {\r\n        setSongs(res)\r\n      });\r\n    }, [likeState]);\r\n  \r\n  return (\r\n  songs != null ?\r\n  <div className=\"page\">\r\n    <p>All Songs</p>\r\n    <div className={\"all-songs-container\"}>\r\n      {songs && songs.map((song, i) => (\r\n          <Song\r\n            key={song.song_id}\r\n            song={song}\r\n            setSongToPlay={setSongToPlay}\r\n            likeState={likeState}\r\n            setLikeState={setLikeState}\r\n          >\r\n          </Song>\r\n      ))}\r\n    </div>\r\n  </div>\r\n  : <Loader/>\r\n  );\r\n}\r\n\r\nexport default Allsongs;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { read } from \"../../wrappers/ajax\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'fontsource-roboto';\r\nimport Loader from '../Loader'\r\nimport { mixpanelTrackUrlChanged } from '../../analytics/analyticsManager'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList: {\r\n      width: \"50vw\",\r\n      height: \"max-content\",\r\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n      transform: 'translateZ(0)',\r\n    },\r\n    titleBar: {\r\n      background:\r\n        'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\r\n        'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n    },\r\n    icon: {\r\n      color: 'white',\r\n    },\r\n  }));\r\n\r\nfunction AllArtists() {\r\n\r\n    const [artists, setArtists] = useState()\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n  \r\n    useEffect(() => {\r\n      mixpanelTrackUrlChanged(location.pathname)\r\n    },[])\r\n\r\n    useEffect(() => {\r\n      read(\"api/v1/artists\").then((res) => {\r\n        setArtists(res)\r\n      });\r\n    }, []);\r\n  \r\n  return (\r\n    artists != null ?\r\n    <div className=\"page\">\r\n      <p  className=\"all-artists-header\">All Artists</p>\r\n        <div className={\"all-artists-container\"}>\r\n            <div className={classes.root}>\r\n                <GridList cellHeight={150} spacing={2} className={classes.gridList}>\r\n                    {artists.map((artist) => (\r\n                      <GridListTile key={artist.artisName} cols={1}>\r\n                            <img src={artist.artistCoverImg} alt={artist.artistName} />\r\n                              <Link to={`/artist/${artist.id}`}>\r\n                            <GridListTileBar\r\n                                title={artist.artistName}\r\n                                titlePosition=\"top\"\r\n                                actionIcon={\r\n                                  <IconButton aria-label={`star ${artist.artistName}`} className={classes.icon}>\r\n                                  <StarBorderIcon></StarBorderIcon>\r\n                                  </IconButton>\r\n                                }\r\n                                actionPosition=\"left\"\r\n                                className={classes.titleBar}\r\n                                />\r\n                                </Link>\r\n                        </GridListTile>\r\n                    ))}\r\n                </GridList>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    : <Loader/>\r\n  );\r\n}\r\n\r\nexport default AllArtists;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { read, create } from \"../../wrappers/ajax\"\r\nimport Playlist from '../Playlist';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {useForm} from 'react-hook-form'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Loader from '../Loader'\r\nimport { mixpanelTrackUrlChanged } from '../../analytics/analyticsManager'\r\n\r\n\r\nfunction Allplaylists() {\r\n\r\n    const [playlists, setPlaylists] = useState([])\r\n    const [open, setOpen] = useState(false);\r\n    const {register: addNewPlaylist, handleSubmit: handleAddNewPlaylist} = useForm()\r\n    const location = useLocation();\r\n  \r\n    useEffect(() => {\r\n      mixpanelTrackUrlChanged(location.pathname)\r\n    },[])\r\n\r\n\r\n    useEffect(() => {\r\n      read(\"/api/v1/playlists\").then((res) => {\r\n        setPlaylists(res)\r\n      });\r\n    }, []);\r\n\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const onAddNewPlaylist = data => {\r\n      create(\"/playlists/add\", data);\r\n      handleClose()\r\n    } \r\n\r\n  return (\r\n  playlists != null ?\r\n  <div className=\"page\">\r\n      <p>All Playlists</p>\r\n      <Tooltip \r\n        title=\"create new playlist\" placement={\"bottom\"}\r\n        TransitionProps={{ timeout: 600 }}>\r\n        <IconButton aria-label=\"add\" variant=\"outlined\" onClick={handleClickOpen}>\r\n          <AddIcon/>\r\n        </IconButton>\r\n      </Tooltip>\r\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Add to Playlist</DialogTitle>\r\n        <DialogContent>\r\n        </DialogContent>\r\n          <form  \r\n            noValidate onSubmit={handleAddNewPlaylist(onAddNewPlaylist)}>\r\n            <div>\r\n            <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"playlistName\"\r\n            label=\"playlist name\"\r\n            inputRef={addNewPlaylist}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"playlistCoverImg\"\r\n            label=\"playlist cover image (URL)\"\r\n            inputRef={addNewPlaylist}\r\n            fullWidth\r\n          />\r\n            </div>\r\n          <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          style={{marginBottom:\"5px\"}}\r\n          inputRef={addNewPlaylist}>\r\n            Add\r\n          </Button>\r\n          <Button onClick={handleClose}\r\n          color=\"primary\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          </form>\r\n        <DialogActions>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div className=\"page\">\r\n        <div className={\"all-playlists-container\"}>\r\n          {playlists && playlists.map(playlist => (\r\n            <Playlist\r\n            key={playlist.id}\r\n            playlist={playlist}\r\n            >\r\n            </Playlist>\r\n          ))}\r\n        </div>\r\n      </div>\r\n  </div>\r\n  : <Loader/>\r\n  );\r\n}\r\n\r\nexport default Allplaylists;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { read } from \"../../wrappers/ajax\"\r\nimport 'fontsource-roboto';\r\nimport Song from '../Song'\r\nimport { useParams, useLocation, Link } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { brown } from '@material-ui/core/colors';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport likeFunction from \"../../wrappers/likeFunction\"\r\nimport Loader from '../Loader'\r\nimport { mixpanelTrackUrlChanged, mixpanelTrackSongLiked, mixpanelTrackSongUnliked  } from '../../analytics/analyticsManager'\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '130%',\r\n    backgroundColor: brown[500],\r\n    marginLeft: \"20px\"\r\n  },\r\n  paper: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    backgroundColor: brown[500],\r\n    marginRight: \"20px\",\r\n    textAlign: \"center\",\r\n  }\r\n}));\r\n\r\n\r\nfunction SingleSong({ setSongToPlay }) {\r\n  \r\n  let { id } = useParams(); \r\n  const [singleSongObject, setSingleSongObject] = useState();\r\n  const [songsFromQuery, setSongsFromQuery] = useState();\r\n  const [likeState, setLikeState] = useState(false);\r\n  const [singlePlaylistObject, setSinglePlaylistObject] = useState()\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    mixpanelTrackUrlChanged(location.pathname)\r\n  },[])\r\n\r\n  function useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n  }\r\n\r\n  const query = useQuery()\r\n  const artistQuery = query.get(\"artist\");\r\n  const albumQuery = query.get('album');\r\n  const playlistQuery = query.get(\"playlist\");\r\n  const queryKey = albumQuery !== null ? `album` : artistQuery !== null ? 'artist' : 'playlist';\r\n  const queryValue = albumQuery !== null ? albumQuery : artistQuery !== null ? artistQuery : playlistQuery;\r\n\r\n    useEffect(() => {\r\n      read(`/api/v1/songs/${id}`).then((res) => {\r\n        setSingleSongObject(res)\r\n      });\r\n    }, [id, likeState]);\r\n\r\n    useEffect(() => {\r\n        read(`/api/v1/${queryKey}s/${queryValue}`).then((res) => {\r\n          setSongsFromQuery(res);\r\n        })\r\n      }, [likeState]);\r\n\r\n      const handleLike = (song) => {\r\n        likeFunction(song); \r\n        setLikeState(!likeState); \r\n        likeState ? \r\n        mixpanelTrackSongUnliked(song.songName)\r\n        : mixpanelTrackSongLiked(song.songName) \r\n      }\r\n  \r\n  return (\r\n  singleSongObject && songsFromQuery ?\r\n  <div className=\"page\">\r\n    <div className=\"single-page\">\r\n      <Song\r\n      key={singleSongObject.song_id}\r\n      song={singleSongObject}\r\n      setSongToPlay={setSongToPlay}\r\n      likeState={likeState}\r\n      setLikeState={setLikeState}>\r\n      </Song>\r\n      <div className=\"suggested-songs\">\r\n        <List className={classes.root}\r\n          subheader={\r\n                <Link to={`/${queryKey}/${queryValue}`}>\r\n            <ListSubheader component=\"p\">\r\n              {  songsFromQuery.Songs.length > 1 ? <h5>related songs from \r\n                {albumQuery ? \r\n                ' ' + songsFromQuery.albumName :\r\n                artistQuery ? \r\n                ' ' + songsFromQuery.artistName :\r\n                playlistQuery &&\r\n                ' ' + songsFromQuery.playlistName + ' playlist'}</h5>\r\n                : <h5>this is the only song from this {queryKey}</h5>}\r\n            </ListSubheader>\r\n            </Link>\r\n          }>\r\n          {songsFromQuery.Songs.filter(song => song.songName !== singleSongObject.songName).map((song, i) => (\r\n            <ListItem key={i} role={undefined} dense>\r\n              <Link \r\n              to={`/song/${song.id}?${queryKey}=${queryValue}`}\r\n              style={{color: 'black'}}>\r\n                <ListItemText primary={`${song.songName}`} />\r\n              </Link>\r\n              <ListItemSecondaryAction>\r\n                <Tooltip \r\n                  title={\"add/remove from favorites\"} placement={\"right\"}\r\n                  TransitionComponent={Fade} TransitionProps={{ timeout: 600 }}>\r\n                  <IconButton\r\n                    edge=\"end\"\r\n                    aria-label=\"like\"\r\n                    onClick={() => {handleLike(song)}}>\r\n                    <FavoriteIcon  color={song.Interactions[0] && song.Interactions[0].isLiked === true ? 'secondary' : 'inherit'}>\r\n                    </FavoriteIcon>\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  : <Loader/>\r\n  );\r\n}\r\n\r\nexport default SingleSong;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { read } from \"../../wrappers/ajax\"\r\nimport 'fontsource-roboto';\r\nimport { useParams, Link, useLocation } from \"react-router-dom\";\r\nimport Album from '../Album';\r\nimport { brown } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport likeFunction from \"../../wrappers/likeFunction\"\r\nimport Loader from '../Loader'\r\nimport { mixpanelTrackUrlChanged, mixpanelTrackSongLiked, mixpanelTrackSongUnliked  } from '../../analytics/analyticsManager'\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '139%',\r\n    maxWidth: 360,\r\n    backgroundColor: brown[500],\r\n    marginLeft: \"20px\"\r\n  },\r\n}));\r\n\r\nfunction SingleAlbum({ setSongToPlay }) {\r\n  const location = useLocation();\r\n  \r\n  useEffect(() => {\r\n    mixpanelTrackUrlChanged(location.pathname)\r\n  },[])\r\n  \r\n  let { id } = useParams() \r\n  const [singleAlbum, setSingleAlbum] = useState();\r\n  const [likeState, setLikeState] = useState(false)\r\n  const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n      read(`/api/v1/albums/${id}`).then((res) => {\r\n        setSingleAlbum(res)\r\n      });\r\n    }, [id, likeState]);\r\n\r\n    const handleLike = (song) => {\r\n      likeFunction(song); \r\n      setLikeState(!likeState); \r\n      likeState ? \r\n      mixpanelTrackSongUnliked(song.songName)\r\n      : mixpanelTrackSongLiked(song.songName) \r\n    }\r\n  \r\n  return (\r\n    singleAlbum ?\r\n  <div className=\"page\">\r\n    <div className=\"single-page\">\r\n            <Album\r\n              key={singleAlbum.id}\r\n              album={singleAlbum}\r\n              setSongToPlay={setSongToPlay}\r\n            >\r\n            </Album>\r\n            <div className=\"suggested-songs\">\r\n              <List className={classes.root}\r\n                subheader={\r\n                  <ListSubheader component=\"p\">\r\n                    more songs from {singleAlbum.albumName} \r\n                  </ListSubheader>\r\n                }>\r\n                {singleAlbum.Songs.map((song) => (\r\n                  <ListItem key={song.id} role={undefined} dense button>\r\n                    <Link \r\n                    to={`/song/${song.id}?album=${song.albumId}`}\r\n                    style={{color: 'black'}}>\r\n                      <ListItemText primary={`${song.songName}`} />\r\n                    </Link>\r\n                    <ListItemSecondaryAction>\r\n                      <IconButton\r\n                        edge=\"end\"\r\n                        aria-label=\"like\"\r\n                        onClick={() => {handleLike(song)}}>\r\n                        <FavoriteIcon  color={song.Interactions[0] && song.Interactions[0].isLiked === true ? 'secondary' : 'inherit'}>\r\n                        </FavoriteIcon>\r\n                      </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n              </div>\r\n    </div>\r\n  </div>\r\n  : <Loader/>\r\n  );\r\n}\r\n\r\nexport default SingleAlbum;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { read } from \"../../wrappers/ajax\"\r\nimport 'fontsource-roboto';\r\nimport Playlist from '../Playlist'\r\nimport { useParams } from \"react-router-dom\";\r\nimport Loader from '../Loader'\r\nimport { mixpanelTrackUrlChanged } from '../../analytics/analyticsManager'\r\n\r\n\r\nfunction SinglePlaylist({ props, singleSong }) {\r\n  let { id } = useParams() \r\n  const location = useLocation();\r\n\r\n  const [singlePlaylistObject, setSinglePlaylistObject] = useState()\r\n  \r\n  useEffect(() => {\r\n    mixpanelTrackUrlChanged(location.pathname)\r\n  },[])\r\n\r\n    useEffect(() => {\r\n      read(`/api/v1/playlists/${id}`).then((res) => {\r\n        setSinglePlaylistObject(res)\r\n      });\r\n    }, [id]);\r\n  \r\n    return (\r\n      singlePlaylistObject ?\r\n        <div className=\"page\">\r\n          <div className=\"single-page\">\r\n            <Playlist\r\n              key={singlePlaylistObject.id}\r\n              playlist={singlePlaylistObject}\r\n            >\r\n            </Playlist>\r\n          </div>\r\n        </div>\r\n        : <Loader/>\r\n        );\r\n}\r\n\r\nexport default SinglePlaylist;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { read } from \"../../wrappers/ajax\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport 'fontsource-roboto';\r\nimport Artist from '../Artist'\r\nimport { useParams, Link, useLocation } from \"react-router-dom\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport { brown } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport likeFunction from \"../../wrappers/likeFunction\"\r\nimport Loader from '../Loader'\r\nimport { mixpanelTrackUrlChanged, mixpanelTrackSongLiked, mixpanelTrackSongUnliked  } from '../../analytics/analyticsManager'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '150%',\r\n    maxWidth: 360,\r\n    backgroundColor: brown[500],\r\n    marginLeft: \"20px\"\r\n  },\r\n}))\r\n\r\nfunction SinglePlaylist({ props, singleSong }) {\r\n  let { id } = useParams() \r\n  const [singleArtist, setSingleArtist] = useState({})\r\n  const [likeState, setLikeState] = useState(false); \r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  \r\n  useEffect(() => {\r\n    mixpanelTrackUrlChanged(location.pathname)\r\n  },[])\r\n\r\n\r\n    useEffect(() => {\r\n      read(`/api/v1/artists/${id}`).then((res) => {\r\n        setSingleArtist(res)\r\n      });\r\n    },[likeState]);\r\n\r\n    const handleLike = (song) => {\r\n      likeFunction(song); \r\n      setLikeState(!likeState); \r\n      likeState ? \r\n      mixpanelTrackSongUnliked(song.songName)\r\n      : mixpanelTrackSongLiked(song.songName) \r\n    }\r\n  \r\n    return (\r\n      singleArtist.artistName ? \r\n        <div className=\"page\">\r\n          <div className=\"single-page\">\r\n            <Artist\r\n              key={singleArtist.id}\r\n              artist={singleArtist}\r\n            >\r\n            </Artist>\r\n            <div className=\"suggested-songs\">\r\n              <List className={classes.root}\r\n                subheader={\r\n                  <ListSubheader component=\"p\">\r\n                    suggestes songs from {singleArtist.artistName}\r\n                  </ListSubheader>\r\n                }>\r\n                {singleArtist.Songs.map((song) => {\r\n                  return <ListItem key={song.id} role={undefined} dense>\r\n                      <Link \r\n                      to={`/song/${song.id}?artist=${singleArtist.id}`}\r\n                      style={{color: 'black'}}>\r\n                    <ListItemText primary={`${song.songName}`} />\r\n                    </Link>\r\n                    <ListItemSecondaryAction>\r\n                      <IconButton\r\n                        edge=\"end\"\r\n                        aria-label=\"like\"\r\n                        onClick={()=> {handleLike(song)}}>\r\n                        <FavoriteIcon  color={song.Interactions[0] && song.Interactions[0].isLiked === true ? 'secondary' : 'inherit'}>\r\n                        </FavoriteIcon>\r\n                      </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n              })}\r\n              </List>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        : <Loader/>\r\n        );\r\n}\r\n\r\nexport default SinglePlaylist;\r\n","import React, { useContext } from 'react';\r\nimport { User } from '../../contexts/userContext';\r\nimport 'fontsource-roboto';\r\nimport Draggable from 'react-draggable';\r\nimport { brown } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Player({ songToPlay }) {\r\n  const user = useContext(User)\r\n\r\n  return (\r\n    <Draggable>\r\n      <div className=\"player\">\r\n        <h1>{songToPlay ? \"Drag Me!\" : `Hey ${user.userName}! Your Songs Will Play Here`}</h1>\r\n        <div className={\"iframe\"} >\r\n          {songToPlay &&\r\n          <iframe title={\"player\"} src={\r\n            `${songToPlay.youtubeLink}?autoplay=1`}\r\n            className={\"video\"}\r\n            allow={\"autoplay\"}\r\n            frameBorder={0}\r\n            height={\"100%\"} width={\"100%\"}></iframe>\r\n          }\r\n        </div>     \r\n      </div>\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default Player;\r\n","import React, {useEffect} from 'react';\r\nimport 'fontsource-roboto';\r\nimport { mixpanelTrackUrlChanged } from '../../analytics/analyticsManager'\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n\r\nfunction NoMatch({ setSongToPlay }) {\r\n  const location = useLocation();\r\n  \r\n  useEffect(() => {\r\n    mixpanelTrackUrlChanged(location.pathname)\r\n  },[])\r\n  \r\n    const errorSong = {\r\n        youtube_link: \"https://www.youtube.com/embed/fTRm3nyNpro\",\r\n        lyrics: \"?לאן אלך\"\r\n      }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    <header className=\"App-header\">\r\n        <code>404</code>\r\n      <p>You have reached a dead end.</p>\r\n      <p>At leat click this button to play a song</p>\r\n      <button onClick={()=>{setSongToPlay(errorSong)}}>play</button>\r\n    </header>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default NoMatch;","import React from 'react';\r\nimport { create } from \"../../../wrappers/ajax\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useForm} from 'react-hook-form'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));;\r\n\r\nfunction Login({ setUser }) {\r\n  const classes = useStyles();\r\n\r\n  const {register: Login, errors, handleSubmit: handleLogin} = useForm()\r\n\r\n  const onLogin = data => {\r\n    create(\"/api/v1/auth/login\", data).then(res => {\r\n      if (res.success) {\r\n        window.location = '/';\r\n      } else {\r\n      console.log(res)\r\n      }\r\n    })\r\n  }\r\n\r\n  \r\n  return (\r\n    <div className={\"home-section\"} style={{backgroundColor: \"rgb(99,84,65)\"}}>\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <AccountCircleIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Login\r\n        </Typography>\r\n        <form  \r\n          className={classes.form} \r\n          noValidate onSubmit={handleLogin(onLogin)}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\" \r\n            inputRef={Login({required: true, minLength: 10})}\r\n            fullWidth\r\n            label=\"email\"\r\n            name=\"email\"\r\n            autoFocus\r\n          />\r\n          {errors.email?.type === \"required\" && <p>Please Enter mail</p>}\r\n          {errors.email?.type === \"minLength\" && <p>Please Enter valid mail</p>}\r\n        <div className={\"add-artist-container\"}>\r\n        </div>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={Login({minLength: 1})}\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"password\"\r\n            type=\"password\"\r\n          />\r\n          <TextField\r\n            inputRef={Login}\r\n            fullWidth\r\n            name=\"rememberMe\"\r\n            type=\"checkbox\"\r\n            label=\"remember me\"\r\n          />\r\n          {errors.email?.type === \"required\" && <p>Please Enter password</p>}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Login\r\n          </Button>\r\n          <Button\r\n            onClick={()=>{window.location = '/signUp'}}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.submit}\r\n          >\r\n            SignUp\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { create } from \"../../../wrappers/ajax\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useForm} from 'react-hook-form'\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));;\r\n\r\nfunction SignUp() {\r\n  const classes = useStyles();\r\n\r\n  const {register: signUp, handleSubmit: handleSignUp} = useForm()\r\n\r\n  const onSignUp = data => {\r\n    create(\"/api/v1/users/add\", data);\r\n    window.location = '/';\r\n  } \r\n  \r\n  return (\r\n    <div className={\"home-section\"} style={{backgroundColor: \"rgb(99,84,65)\"}}>\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <AccountCircleIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n            Not a member?\r\n        </Typography>\r\n        <form  \r\n          className={classes.form} \r\n          noValidate onSubmit={handleSignUp(onSignUp)}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={signUp}\r\n            required\r\n            fullWidth\r\n            label=\"username\"\r\n            name=\"userName\"\r\n            autoFocus\r\n          />\r\n        <div className={\"add-artist-container\"}>\r\n        </div>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={signUp}\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"password\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={signUp}\r\n            required\r\n            fullWidth\r\n            name=\"email\"\r\n            label=\"email\"\r\n          />\r\n          <Select placeholder=\"albums\" native inputRef={signUp} name=\"rememberToken\" variant=\"outlined\">\r\n          <option value={1}>yes</option>\r\n          <option value={0}>no</option>\r\n          </Select>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport { User } from './contexts/userContext';\r\nimport './App.css';\r\nimport Cookies from 'js-cookie';\r\nimport 'fontsource-roboto';\r\nimport Home from './components/pages/Home/Home';\r\nimport Sidebar from './components/Sidebar';\r\nimport Topbar from './components/Topbar';\r\nimport Admin from './components/pages/Admin/Admin';\r\nimport Allsongs from './components/pages/Allsongs';\r\nimport AllArtists from './components/pages/AllArtists';\r\nimport Allplaylists from './components/pages/Allplaylists';\r\nimport SingleSong from './components/pages/SingleSong';\r\nimport SingleAlbum from './components/pages/SingleAlbum';\r\nimport SinglePlaylist from './components/pages/SinglePlaylist';\r\nimport SingleArtist from './components/pages/SingleArtist';\r\nimport Player from './components/pages/Player';\r\nimport NoMatch from './components/pages/NoMatch';\r\nimport Login from './components/pages/Identification/Login';\r\nimport Signup from './components/pages/Identification/Signup';\r\nimport { read } from \"./wrappers/ajax\"\r\nimport { mixpanelTrackLoggedIn, mixpanelTrackEnteredLoginPage } from \"./analytics/analyticsManager\";\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [songToPlay, setSongToPlay] = useState();\r\n  const [logged, setLogged] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [user, setUser] = useState();\r\n\r\n  useEffect(() => {// auth\r\n    (async () => {\r\n      if (Cookies.get(\"accessToken\")) {\r\n        try {\r\n          const data = await read(\"/api/v1/auth/validateToken\");\r\n          setLogged(data);\r\n          const userId = Cookies.get('id');\r\n          const userLogged = await read(`api/v1/users/id/${userId}`);\r\n          setUser(userLogged);\r\n          setLoading(false);\r\n          mixpanelTrackLoggedIn()\r\n        } catch (e) {\r\n          setLoading(false)\r\n        }\r\n      } else {\r\n        setLoading(false);\r\n        mixpanelTrackEnteredLoginPage()\r\n        console.log('cant get token')\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    {\r\n        !loading ?\r\n          !logged ?\r\n          <Router>\r\n          <Switch>\r\n          <Route path={'/'} exact> <Login></Login></Route>\r\n          <Route path={'/signUp'} exact> <Signup/> </Route>\r\n          </Switch> \r\n          </Router>\r\n          : \r\n          <User.Provider value={user}>\r\n          <Router>\r\n            <Topbar></Topbar>\r\n            <Sidebar></Sidebar>\r\n            <Player songToPlay={songToPlay}></Player>\r\n              <Switch>\r\n                <Route path={\"/\"} exact> <Home setSongToPlay={setSongToPlay}> </Home> </Route>\r\n                <Route path=\"/Allsongs\"> <Allsongs setSongToPlay={setSongToPlay}> </Allsongs> </Route>\r\n                <Route path=\"/Admin\" exact> <Admin/> </Route>\r\n                <Route path=\"/Allartists\" exact> <AllArtists/> </Route>\r\n                <Route path=\"/Allplaylists\" exact> <Allplaylists/> </Route>\r\n                <Route path=\"/playlist/:id\" exact> <SinglePlaylist/> </Route>\r\n                <Route path=\"/song/:id\" exact> <SingleSong setSongToPlay={setSongToPlay}></SingleSong> </Route>\r\n                <Route path=\"/album/:id\" exact> <SingleAlbum setSongToPlay={setSongToPlay}></SingleAlbum> </Route>\r\n                <Route path=\"/artist/:id\" exact> <SingleArtist setSongToPlay={setSongToPlay}></SingleArtist> </Route>\r\n                <Route> <NoMatch setSongToPlay={setSongToPlay}></NoMatch></Route>\r\n              </Switch>\r\n            </Router>\r\n          </User.Provider>\r\n        : <div>loading...</div>\r\n      }\r\n      </div>\r\n      );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}