{"version":3,"sources":["contexts/userContext.js","wrappers/network.js","wrappers/ajax.js","components/Loader.js","components/Album.js","components/pages/Home/TopAlbums.js","wrappers/likeFunction.js","analytics/analyticsManager.js","components/Song.js","components/pages/Home/TopSongs.js","components/Playlist.js","components/pages/Home/TopPlaylists.js","components/Artist.js","components/pages/Home/TopArtists.js","components/pages/Home/Home.js","components/Search.js","hooks/debounce.js","components/ErrorBoundary.js","components/Sidebar.js","components/Topbar.js","components/pages/Admin/AddSong.js","components/pages/Admin/AddArtist.js","components/pages/Admin/AddAlbum.js","components/pages/Admin/Admin.js","components/pages/Allsongs.js","components/pages/AllArtists.js","components/pages/Allplaylists.js","components/pages/SingleSong.js","components/pages/SingleAlbum.js","components/pages/SinglePlaylist.js","components/pages/SingleArtist.js","components/pages/Player.js","components/pages/Identification/Login.js","components/pages/Identification/Signup.js","App.js","serviceWorker.js","index.js"],"names":["User","createContext","network","url","body","customConfig","getToken","Cookies","get","headers","config","method","JSON","stringify","fetch","then","response","a","json","data","ok","Promise","reject","status","message","create","read","Loader","className","useStyles","makeStyles","theme","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","duration","shortest","expandOpen","card","backgroundColor","brown","Album","album","classes","Card","CardHeader","avatar","Avatar","alt","src","Artists","artistCoverImg","title","albumName","disableTypography","CardContent","to","id","albumCoverImg","TopAlbums","topAlbums","style","length","additionalTransfrom","responsive","desktop","breakpoint","max","min","items","tablet","mobile","keyBoardControl","containerClass","itemClass","map","i","key","albumId","likeFunction","song","user","wasLiked","date","Date","now","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","isLiked","interaction","userId","songId","playCount","mixpanel","require","init","mixpanelTrackUrlChanged","path","track","mixpanelTrackSongLiked","songName","mixpanelTrackSongUnliked","Song","setSongToPlay","setLikeState","likeState","useContext","useState","open","setOpen","playlists","setPlaylists","setIsLiked","useForm","addToPlaylist","register","handleAddToPlaylist","handleSubmit","useEffect","res","handleClose","artistId","CardActions","disableSpacing","Tooltip","placement","TransitionComponent","Fade","TransitionProps","timeout","IconButton","aria-label","onClick","color","variant","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","noValidate","onSubmit","Select","fullWidth","native","inputRef","name","value","placeholder","playlist","playlistName","Button","type","marginBottom","DialogActions","TopSongs","topSongs","userName","song_id","textDecoration","Playlist","React","expanded","setExpanded","handleRemoveFromPlaylist","songInPlaylist","createdAt","subheader","playlistCoverImg","clsx","aria-expanded","Collapse","in","unmountOnExit","Typography","Songs","TopPlaylists","topPlaylists","infinite","playlist_id","artist","artistName","TopArtists","topArtists","Artist","artist_id","Home","location","useLocation","setTopAlbums","setTopArtists","setTopPlaylists","setTopSongs","pathname","Search","searchInput","setSearchInput","searchSongsOutputs","setSearchSongsOutputs","searchArtistsOutputs","setSearchArtistsOutputs","searchAlbumsOutputs","setSearchAlbumsOutputs","setIsSearching","debouncedSearchInput","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","catch","err","console","error","TextField","onChange","e","target","maxHeight","width","fontSize","ErrorBoundary","props","state","hasError","errorInfo","this","children","Component","Sidebar","sideBarOpen","setSideBarOpen","logOut","remove","window","collapsed","image","iconShape","icon","isAdmin","Topbar","form","display","flexDirection","alignItems","padding","gap","AddSong","artists","albums","newSong","handleNewSong","margin","required","label","autoFocus","InputLabel","submit","AddArtist","newArtist","handleNewArtist","component","AddAlbum","newAlbum","handleNewAlbum","Admin","setArtists","setAlbums","Allsongs","songs","setSongs","root","flexWrap","justifyContent","overflow","palette","background","paper","gridList","titleBar","AllArtists","GridList","cellHeight","spacing","GridListTile","artisName","cols","GridListTileBar","titlePosition","actionIcon","actionPosition","Allplaylists","addNewPlaylist","handleAddNewPlaylist","marginRight","textAlign","SingleSong","useParams","singleSongObject","setSingleSongObject","songsFromQuery","setSongsFromQuery","query","URLSearchParams","search","artistQuery","albumQuery","playlistQuery","queryKey","queryValue","List","ListSubheader","filter","ListItem","role","undefined","dense","ListItemText","primary","ListItemSecondaryAction","edge","handleLike","Interactions","maxWidth","SingleAlbum","singleAlbum","setSingleAlbum","button","SinglePlaylist","singleSong","singlePlaylistObject","setSinglePlaylistObject","singleArtist","setSingleArtist","Player","songToPlay","youtubeLink","allow","frameBorder","marginTop","main","Login","setUser","errors","handleLogin","loginError","setLoginError","Container","CssBaseline","success","minLength","email","password","Checkbox","SignUp","signUp","handleSignUp","App","logged","setLogged","loading","setLoading","userLogged","Provider","exact","SingleArtist","Signup","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7ea2d80.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const User = createContext();\r\n","import Cookies from 'js-cookie';\r\n\r\nexport default function network(url ,body, {...customConfig} = {}) {\r\n  \r\n  const getToken = () => Cookies.get('accessToken');\r\n\r\n\r\n  const headers = {\r\n    \"Content-Type\": \"application/json; charrset=utf-8\",\r\n    \"Authorization\": \"bearer \" + getToken()\r\n  };\r\n\r\n  const config = {\r\n    method: body ? 'POST' : 'GET',\r\n    ...customConfig,\r\n    headers: {\r\n      ...headers,\r\n      ...customConfig.headers\r\n    },\r\n  }\r\n\r\n  if (body != null) {\r\n    config.body = JSON.stringify(body);\r\n  } \r\n\r\n  return fetch(url, config)   \r\n    .then(async response => {\r\n      const data = await response.json()\r\n      if (response.ok) {\r\n        return data\r\n      } else {\r\n        return Promise.reject(`${response.status} : ''${data.message}'`);\r\n      }\r\n    })\r\n}\r\n","import network from \"./network\"\r\n\r\nexport function create(url, body) { // todo: use await\r\n  return network(url, body)\r\n}\r\n\r\nexport function read(url) {\r\n  return network(url)\r\n}\r\n\r\nexport function destroy(url, body) {\r\n  return network(url, body, {method: 'DELETE'})\r\n}\r\n","import React from 'react';\r\n\r\n\r\n\r\n\r\nfunction Loader() {\r\n\r\n    return (\r\n        <div className={'loaderContainr'}>\r\n            <div className=\"loader\"></div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { brown } from '@material-ui/core/colors';\r\nimport Loader from './Loader'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    card: {\r\n      backgroundColor: brown[500],\r\n    },\r\n  }));\r\n \r\n\r\nfunction Album({ album }) {\r\n\r\n    const classes = useStyles();\r\n\r\n  return (\r\n    album ?\r\n    <div className={\"card\"}>\r\n      <Card className={classes.card}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar alt=\"artist img\" src={album.Artists[0] && album.Artists[0].artistCoverImg}>\r\n            </Avatar>\r\n          }\r\n          title={album.albumName}\r\n          disableTypography={false}\r\n        ></CardHeader>\r\n        <CardContent>\r\n          <Link to={`/album/${album.id}`}>\r\n          <div className={\"logo-container\"}>\r\n            {<img src={album.albumCoverImg} className=\"card-logo\" alt=\"logo\" />}\r\n          </div>\r\n          </Link>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n    : <Loader/>\r\n  )\r\n}\r\n\r\nexport default Album;\r\n","import React from 'react';\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { read } from \"../../../wrappers/ajax\"\r\nimport 'fontsource-roboto';\r\nimport Album from '../../Album'\r\nimport Loader from '../../Loader'\r\n\r\n\r\nfunction TopAlbums({topAlbums}) {\r\n\r\n\r\n    const responsive = {\r\n      desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 6,\r\n      },\r\n      tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2,\r\n      },\r\n      mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 2,\r\n      },\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <div className={\"home-section\"} style={{backgroundColor: \"rgba(0,31,63,0.79)\"}}>\r\n    <h5>Your most favorite albums</h5>\r\n    { topAlbums && topAlbums.length > 0 ?\r\n      <Carousel\r\n        additionalTransfrom={0}\r\n        responsive={responsive}\r\n        keyBoardControl={true}\r\n        containerClass=\"carousel-container\"\r\n        itemClass=\"carousel-item\">\r\n        {\r\n          topAlbums.map((album, i) => (\r\n            <Album\r\n            key={album.albumId}\r\n            album={album}\r\n            />\r\n          ))\r\n        }\r\n      </Carousel>\r\n      : !topAlbums ?\r\n      <Loader/>\r\n    : topAlbums.length === 0 &&\r\n    <div> \r\n      <h5 className=\"no-likes-message\">\r\n        same for albums..\r\n      </h5>\r\n    </div> \r\n    }\r\n    </div>     \r\n  </>\r\n  ) \r\n}\r\n\r\nexport default TopAlbums;\r\n","import { create } from '../wrappers/ajax';\r\n\r\nexport default function likeFunction (song, user, wasLiked) {\r\n    function removeLinebreaks( str ) { \r\n      return str.replace( /[\\r\\n]+/gm, \"\" ); \r\n  } \r\n    const date = new Date(Date.now())\r\n    const dateToShow = `${date.getFullYear()}-${(date.getMonth() + 1)}-${date.getDate()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\r\n  \r\n\r\n    if (!wasLiked) {\r\n      const interaction = {\r\n        userId: user.id, \r\n        songId: song.id,\r\n        isLiked: 1,\r\n        playCount: 1,\r\n      }\r\n      create(`/api/v1/songs/${song.id}/user-liked/${user.id}`, interaction)\r\n    } else {\r\n      create(`/api/v1/songs/${song.id}/user-liked/${user.id}`, {isLiked: wasLiked ? false : true})\r\n    }\r\n  }","var mixpanel = require('mixpanel-browser');\r\n\r\nmixpanel.init(\"604c09ff43a4102330d4013e7061ee7e\");\r\n\r\nexport const mixpanelTrackLoggedIn = () => mixpanel.track(\"Logged In\");\r\n\r\nexport const mixpanelTrackEnteredLoginPage = () => mixpanel.track(\"Entered Login Page Page\");\r\n\r\nexport const mixpanelTrackUrlChanged = (path) => mixpanel.track(\"URL Changed\", {\"path\": path});\r\n\r\nexport const mixpanelTrackSongPlayed = (songName) => mixpanel.track(\"Song Played\", {\"name\": songName});\r\n\r\nexport const mixpanelTrackSongLiked = (songName) => mixpanel.track(\"Song Liked\", {\"name\": songName});\r\n\r\nexport const mixpanelTrackSongUnliked = (songName) => mixpanel.track(\"Song Unliked\", {\"name\": songName});\r\n\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { brown } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport { Link } from 'react-router-dom';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { read, create } from '../wrappers/ajax';\r\nimport likeFunction from \"../wrappers/likeFunction\"\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Select from '@material-ui/core/Select';\r\nimport {useForm} from 'react-hook-form';\r\nimport Loader from './Loader';\r\nimport { mixpanelTrackSongPlayed, mixpanelTrackSongLiked, mixpanelTrackSongUnliked } from '../analytics/analyticsManager'\r\nimport { User } from '../contexts/userContext';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    card: {\r\n      backgroundColor: brown[500],\r\n    },\r\n  }));\r\n \r\n\r\nfunction Song({ song, setSongToPlay, setLikeState, likeState}) {\r\n\r\n    const classes = useStyles();\r\n    const user = useContext(User);\r\n    const [open, setOpen] = useState(false);\r\n    const [playlists, setPlaylists] = useState([]);\r\n    const [isLiked, setIsLiked] = useState();\r\n    const {register: addToPlaylist, handleSubmit: handleAddToPlaylist} = useForm()\r\n\r\n\r\n    useEffect(() => {\r\n      read(`api/v1/playlists/`).then((res) => {\r\n        setPlaylists(res)\r\n      });\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n      read(`/api/v1/interactions/song/${song.id}/user/${user.id}`).then((res) => {\r\n        setIsLiked(() => {\r\n          if (res[0]) {\r\n            return res[0].isLiked\r\n          } return false\r\n        })\r\n      });\r\n    }, [likeState]);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const onAddToPlaylist = data => {\r\n      create(\"api/v1/playlists/addSong\", data);\r\n      handleClose()\r\n    } \r\n\r\n    const handleLike = () => {\r\n      likeFunction(song, user, isLiked); \r\n      setLikeState(!likeState); \r\n      \r\n      likeState ? \r\n      mixpanelTrackSongUnliked(song.songName)\r\n      : mixpanelTrackSongLiked(song.songName) \r\n    }\r\n\r\n  return (\r\n    song ?\r\n    <div className={\"card\"}>\r\n      <Card className={classes.card}>\r\n        <CardHeader\r\n          avatar={<Avatar alt=\"artist img\" src={song.Artists[0] && song.Artists[0].artistCoverImg}/>}\r\n          title={song.songName}\r\n          disableTypography={false}\r\n        ></CardHeader>\r\n        <CardContent className={\"logo-container\"}>\r\n        <Link to={`/song/${song.id}?artist=${song.artistId}`}>\r\n        {<img src={\"https://assets.onlinelabels.com/images/clip-art/BenBois/BenBois_Vinyl_records.png\"} className=\"song-logo\" alt=\"logo\" />}\r\n        </Link>\r\n        </CardContent>\r\n        <CardActions disableSpacing>\r\n          <Tooltip \r\n          title={\"add/remove from favorites\"} placement={\"bottom\"}\r\n          TransitionComponent={Fade} TransitionProps={{ timeout: 600 }}>\r\n            <IconButton\r\n              aria-label=\"Like\"\r\n              onClick={handleLike}>\r\n              <FavoriteIcon \r\n              color={isLiked ? 'secondary' : 'inherit'}>\r\n              </FavoriteIcon>\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip \r\n          title=\"play\" placement={\"bottom\"}\r\n          TransitionProps={{ timeout: 600 }}>\r\n            <IconButton aria-label=\"play\" onClick={()=>{setSongToPlay(song); mixpanelTrackSongPlayed(song.songName)}}>\r\n              <PlayArrowIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip \r\n          title=\"add to playlist\" placement={\"bottom\"}\r\n          TransitionProps={{ timeout: 600 }}>\r\n            <IconButton aria-label=\"add\" variant=\"outlined\" onClick={handleClickOpen}>\r\n              <AddIcon/>\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Add to Playlist</DialogTitle>\r\n        <DialogContent>\r\n        </DialogContent>\r\n          <form  \r\n            noValidate onSubmit={handleAddToPlaylist(onAddToPlaylist)}>\r\n            <div>\r\n              <Select fullWidth native inputRef={addToPlaylist} name=\"songId\" variant=\"outlined\">\r\n                <option value={song.id}>{song.songName}</option>\r\n              </Select>\r\n              <Select fullWidth placeholder=\"playlists\" native inputRef={addToPlaylist} name=\"playlistId\" variant=\"outlined\">\r\n                {playlists.map(playlist => (<option key={playlist.playlistName} value={playlist.id}>{playlist.playlistName}</option>))}\r\n              </Select>\r\n            </div>\r\n          <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          style={{marginBottom:\"5px\"}}\r\n          inputRef={addToPlaylist}>\r\n            Add\r\n          </Button>\r\n          <Button onClick={handleClose}\r\n          color=\"primary\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          </form>\r\n        <DialogActions>\r\n        </DialogActions>\r\n      </Dialog>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n    : <Loader/>\r\n  )\r\n}\r\n\r\nexport default Song;\r\n","import React, { useState, useContext } from 'react';\r\nimport { User } from '../../../contexts/userContext';\r\nimport Carousel from 'react-multi-carousel';\r\nimport { Link } from 'react-router-dom';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport { read } from \"../../../wrappers/ajax\"\r\nimport 'fontsource-roboto';\r\nimport Song from '../../Song'\r\nimport Loader from '../../Loader'\r\n\r\n\r\nfunction TopSongs({ setSongToPlay, topSongs }) {\r\n  const user = useContext(User)\r\n  const [likeState, setLikeState] = useState(false);\r\n  \r\n  const responsive = {\r\n    desktop: {\r\n    breakpoint: { max: 3000, min: 1024 },\r\n    items: 6,\r\n    },\r\n    tablet: {\r\n    breakpoint: { max: 1024, min: 464 },\r\n    items: 2,\r\n    },\r\n    mobile: {\r\n    breakpoint: { max: 464, min: 0 },\r\n    items: 2,\r\n    },\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={\"home-section\"} style={{backgroundColor: \"rgb(99,84,65)\"}}>\r\n      <h5>Hello {user.userName}, those are your Most Favorite Songs</h5>\r\n      { topSongs && topSongs.length > 0 ? \r\n        <Carousel\r\n        additionalTransfrom={0}\r\n        responsive={responsive}\r\n        keyBoardControl={true}\r\n        containerClass=\"carousel-container\"\r\n        itemClass=\"carousel-item\">\r\n        {\r\n          topSongs.map((song, i) => (\r\n            <Song\r\n            key={song.song_id}\r\n            song={song}\r\n            setSongToPlay={setSongToPlay}\r\n            likeState={likeState}\r\n            setLikeState={setLikeState}/>\r\n            ))\r\n          }\r\n        </Carousel>\r\n      : !topSongs ?\r\n      <Loader/>\r\n    : topSongs.length === 0 &&\r\n    <div>\r\n    <Link style={{ textDecoration: 'none' }} to=\"/Allsongs\">\r\n      <h5 className=\"no-likes-message\">\r\n      But You havnt liked any yet... Go explore our songs!\r\n      </h5>\r\n    </Link>\r\n    </div> \r\n    }\r\n      </div>     \r\n    </>\r\n  );\r\n}\r\n\r\nexport default TopSongs;\r\n","import React from 'react';\r\nimport { read, destroy } from \"../wrappers/ajax\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport { Link } from 'react-router-dom';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { brown } from '@material-ui/core/colors';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport Loader from './Loader'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    media: {\r\n      height: 120,\r\n      paddingTop: '56.25%', // 16:9\r\n    \r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    card: {\r\n      backgroundColor: brown[500],\r\n    },\r\n  }));\r\n \r\n\r\nfunction Playlist({ playlist }) {\r\n\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n      setExpanded(!expanded);\r\n    };\r\n\r\n    const handleRemoveFromPlaylist = (songId) => {\r\n      read(`/api/v1/playlists/songInPlaylist/${songId}/${playlist.id}`).then(songInPlaylist => {\r\n        destroy(`api/v1/playlists/removeSong/${songInPlaylist.id}`);\r\n      })\r\n    }\r\n\r\n\r\nconst date = new Date(playlist.createdAt);\r\n  return (\r\n    playlist.playlistName ? \r\n    <div className={\"card\"} >\r\n    <Card className={classes.card}>\r\n        <CardHeader\r\n          title={playlist.playlistName}\r\n          subheader={date.getFullYear()+'-' + (date.getMonth()+1) + '-'+date.getDate() + ' by ' + playlist['Users'][0].userName}\r\n        />\r\n        <Link to={`/playlist/${playlist.id}`}>\r\n          <CardContent className={\"logo-container\"}>\r\n            <img src={playlist.playlistCoverImg} className=\"playlist-logo\" alt=\"logo\"></img>\r\n          </CardContent>\r\n        </Link>\r\n        <CardActions disableSpacing>\r\n            <IconButton\r\n              className={clsx(classes.expand, {\r\n                [classes.expandOpen]: expanded,\r\n              })}\r\n              onClick={handleExpandClick}\r\n              aria-expanded={expanded}\r\n              aria-label=\"show songs list\"\r\n            >\r\n              <ExpandMoreIcon />\r\n            </IconButton>\r\n          </CardActions>\r\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n            <CardContent>\r\n                <Typography>songs:</Typography>\r\n              <ul>\r\n                {playlist.Songs.map((song, i) => (\r\n                  <li \r\n                    key={i}\r\n                    className={\"playlist-list-item\"}>\r\n                      <Link \r\n                      to={`/song/${song.id}?playlist=${playlist.id}`}\r\n                      style={{color: 'black'}}>\r\n                        <h5>{song.songName}</h5>\r\n                      </Link>\r\n                    <IconButton\r\n                    aria-label=\"remove from playlist\"\r\n                    onClick={()=>{handleRemoveFromPlaylist(song.id)}}>\r\n                      <RemoveIcon/>\r\n                    </IconButton>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </CardContent>\r\n          </Collapse>\r\n      </Card>\r\n    </div>\r\n    : <Loader/>\r\n  )\r\n}\r\n\r\nexport default Playlist;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { User } from '../../../contexts/userContext';\r\nimport 'fontsource-roboto';\r\nimport Playlist from '../../Playlist'\r\nimport Carousel from 'react-multi-carousel';\r\nimport Loader from '../../Loader'\r\n\r\n\r\nfunction TopPlaylists({topPlaylists}) {\r\n\r\n    const responsive = {\r\n      desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 6,\r\n      },\r\n      tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2,\r\n      },\r\n      mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 2,\r\n      },\r\n  }\r\n\r\n  \r\n  return (\r\n    <div className={\"home-playlists-section\"} style={{backgroundColor: \"rgba(0,31,63,0.79)\"}}>\r\n    <>\r\n    <h5>Your Favorite Playlists</h5>\r\n      { topPlaylists.length > 0 ?\r\n      <>\r\n      <Carousel\r\n            additionalTransfrom={0}\r\n            responsive={responsive}\r\n            keyBoardControl={true}\r\n            containerClass=\"carousel-container\"\r\n            itemClass=\"carousel-item\"\r\n            infinite\r\n            >\r\n          {topPlaylists.map((playlist, i) => (\r\n          <Playlist\r\n            key={playlist.playlist_id}\r\n            playlist={playlist}\r\n          >\r\n          </Playlist>\r\n          ))}\r\n      </Carousel>\r\n      </>\r\n        : !topPlaylists ?\r\n          <Loader/>\r\n        : topPlaylists.length === 0 &&\r\n        <div>\r\n          <Link style={{ textDecoration: 'none' }} to=\"/Allplaylists\">\r\n            <h5 className=\"no-likes-message\">\r\n              go to Playlists and create your own!\r\n            </h5>\r\n          </Link>\r\n          </div> \r\n      }\r\n    </>\r\n    </div>     \r\n\r\n  );\r\n}\r\n\r\nexport default TopPlaylists;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { brown } from '@material-ui/core/colors';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from './Loader'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  card: {\r\n    backgroundColor: brown[500],\r\n  },\r\n}));\r\n \r\n\r\nfunction Song({ artist, setSongToPlay }) {\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n  return (\r\n    artist.id ?\r\n    <div className={\"card\"}>\r\n      <Card className={classes.card}>\r\n        <CardHeader\r\n          disableTypography={false}\r\n          title={artist.artistName}\r\n        >\r\n        </CardHeader>\r\n        <CardContent className={\"album-container\"}>\r\n          <Link to={`/artist/${artist.id}`}>\r\n          <div className={\"logo-container\"}>\r\n            {<img src={artist.artistCoverImg} className=\"card-logo\" alt=\"logo\" />}\r\n          </div>\r\n          </Link> \r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n    : <Loader/>\r\n  )\r\n}\r\n\r\nexport default Song;\r\n","import React from 'react';\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport { Link } from 'react-router-dom';\r\nimport 'fontsource-roboto';\r\nimport Artist from '../../Artist'\r\nimport Loader from '../../Loader';\r\n\r\nfunction TopArtists({topArtists}) {\r\n\r\n    const responsive = {\r\n      desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 4,\r\n      },\r\n      tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2,\r\n      },\r\n      mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 2,\r\n      },\r\n  }\r\n  \r\n  return (\r\n  <>\r\n    <div className={\"home-section\"} style={{backgroundColor: \"rgb(99,84,65)\"}}>\r\n    <h5>Your most favorite artists</h5>\r\n    { topArtists && topArtists.length > 0 ?\r\n      <>\r\n        <Carousel\r\n          additionalTransfrom={0}\r\n          responsive={responsive}\r\n          keyBoardControl={true}\r\n          containerClass=\"carousel-container\"\r\n          itemClass=\"carousel-item\">\r\n          { topArtists &&\r\n          topArtists.map((artist, i) => (\r\n            <Artist className={\"song\"}\r\n            key={artist.artist_id}\r\n            artist={artist}>\r\n            </Artist>\r\n          ))\r\n          }\r\n        </Carousel>\r\n      </> \r\n      : !topArtists ?\r\n        <Loader/>\r\n      : topArtists.length === 0 &&\r\n      <div>\r\n      <Link style={{ textDecoration: 'none' }} to=\"/Allartists\">\r\n        <h5 className=\"no-likes-message\">\r\n        Go explore our artists!\r\n        </h5>\r\n      </Link>\r\n      </div> \r\n      }\r\n    </div>     \r\n  </>\r\n  );\r\n}\r\n\r\nexport default TopArtists;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport 'fontsource-roboto';\r\nimport TopAlbums from './TopAlbums'\r\nimport TopSongs from './TopSongs'\r\nimport TopPlaylists from './TopPlaylists'\r\nimport TopArtists from './TopArtists'\r\nimport { mixpanelTrackUrlChanged } from '../../../analytics/analyticsManager'\r\nimport { User } from '../../../contexts/userContext';\r\nimport { read } from '../../../wrappers/ajax';\r\n\r\nfunction Home({ setSongToPlay }) {\r\n\r\n  const location = useLocation();\r\n  const user = useContext(User)\r\n\r\n  const [topAlbums, setTopAlbums] = useState()\r\n  const [topArtists, setTopArtists] = useState([])\r\n  const [topPlaylists, setTopPlaylists] = useState(\"\")\r\n  const [topSongs, setTopSongs] = useState();\r\n\r\n  \r\n  useEffect(() => {\r\n    mixpanelTrackUrlChanged(location.pathname)\r\n  },[])\r\n\r\n  const fetchAllTop = () => {\r\n    read(`/api/v1/albums/top/${user.id}`).then((res) => {\r\n      setTopAlbums(res)\r\n    });\r\n    read(`/api/v1/artists/top/${user.id}`).then((res) => {\r\n      setTopArtists(res)\r\n    });\r\n    read(`/api/v1/playlists/top/${user.id}`).then((res) => {\r\n      setTopPlaylists(res)\r\n    });\r\n    read(`/api/v1/songs/top/${user.id}`).then((res) => {\r\n      setTopSongs(res)\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAllTop();\r\n  }, []);\r\n  \r\n  return (\r\n  <div className=\"page\">\r\n      <TopSongs setSongToPlay={setSongToPlay} topSongs={topSongs}></TopSongs>\r\n      <TopAlbums topAlbums={topAlbums}></TopAlbums>\r\n      <TopArtists topArtists={topArtists}></TopArtists>\r\n      <TopPlaylists topPlaylists={topPlaylists}></TopPlaylists>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport 'fontsource-roboto';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport { read } from '../wrappers/ajax';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport useDebounce from '../hooks/debounce'\r\n\r\n\r\nfunction Search() {\r\n\r\n    const [searchInput, setSearchInput] = useState();\r\n    const [searchSongsOutputs, setSearchSongsOutputs] = useState([]);\r\n    const [searchArtistsOutputs, setSearchArtistsOutputs] = useState([]);\r\n    const [searchAlbumsOutputs, setSearchAlbumsOutputs] = useState([]);\r\n    const [isSearching, setIsSearching] = useState(false)\r\n    const debouncedSearchInput = useDebounce(searchInput, 500);\r\n\r\n    useEffect(() => {\r\n        if(debouncedSearchInput) {\r\n            setIsSearching(true);\r\n            try {\r\n                read(`api/v1/search/songs/${searchInput}`).then((res) => {\r\n                    setSearchSongsOutputs(() => {\r\n                        if (res.name === \"ResponseError\") {\r\n                            return false\r\n                        }\r\n                        return res\r\n                    });\r\n                }).catch(err => {\r\n                    setSearchSongsOutputs(false)\r\n                })\r\n                read(`api/v1/search/artists/${searchInput}`).then((res) => {\r\n                    setSearchArtistsOutputs(() => {\r\n                        if (res.name === \"ResponseError\") {\r\n                            return false\r\n                        }\r\n                        return res\r\n                    });\r\n                }).catch(err => {\r\n                    setSearchSongsOutputs(false)\r\n                })\r\n                read(`api/v1/search/albums/${searchInput}`).then((res) => {\r\n                    setSearchAlbumsOutputs(() => {\r\n                        if (res.name === \"ResponseError\") {\r\n                            return false\r\n                        }\r\n                        return res\r\n                    });\r\n                    setIsSearching(false);\r\n                }).catch(err => {\r\n                    setSearchSongsOutputs(false)\r\n                })\r\n            } catch (err) {\r\n                console.error(err);\r\n            } \r\n         }\r\n    }, [debouncedSearchInput]);\r\n\r\n    useEffect(() => {\r\n        setSearchSongsOutputs([])\r\n        setSearchArtistsOutputs([])\r\n        setSearchAlbumsOutputs([])\r\n    },[searchInput])\r\n\r\n  return (  \r\n        <div>\r\n            <TextField onChange={(e)=>setSearchInput(e.target.value)}></TextField>\r\n            <IconButton aria-label=\"delete\">\r\n            <SearchIcon></SearchIcon>\r\n            </IconButton>\r\n            <div style={{maxHeight:\"200px\"}}>\r\n                {searchSongsOutputs.length > 0 && <h5>songs:</h5>}\r\n                {searchSongsOutputs && searchSongsOutputs.map(song =>(\r\n                        <div key={song.id}  style={{width: \"max-content\", fontSize: \"12px\"}}>\r\n                            <Tooltip \r\n                                placement={\"bottom\"}\r\n                                TransitionComponent={Fade}\r\n                                TransitionProps={{ timeout: 600 }}\r\n                                title={`by ${song.Artists[0]?.artistName}`}>\r\n                                <span>{song.songName}</span>\r\n                            </Tooltip>\r\n                                <IconButton>\r\n                            <Link to={`/song/${song.id}?artist=${song.Artists[0]?.id}`}>\r\n                                    <Avatar alt=\"artist img\" src={song.Artists[0]?.artistCoverImg}/>                                    </Link>\r\n                                </IconButton>\r\n                        </div> \r\n                    ))}\r\n                {searchArtistsOutputs.length > 0 && <h5>artists:</h5>}\r\n                    {searchArtistsOutputs && searchArtistsOutputs.map(artist =>(\r\n                        <div key={artist.id}  style={{width: \"max-content\", fontSize: \"12px\"}}>\r\n                                <IconButton>\r\n                            <Link to={`/artist/${artist.id}`}>\r\n                                    <Avatar alt=\"artist img\" src={artist.artistCoverImg}/>                                    </Link>\r\n                                </IconButton>\r\n                                <span>{artist.artistName}</span>\r\n                        </div> \r\n                    ))}\r\n                {searchAlbumsOutputs.length > 0 && <h5>albums:</h5>}\r\n                    { searchAlbumsOutputs && searchAlbumsOutputs.map(album =>(\r\n                        <div key={album.id}  style={{width: \"max-content\", fontSize: \"12px\"}}>\r\n                            <Tooltip \r\n                                placement={\"bottom\"}\r\n                                TransitionComponent={Fade}\r\n                                TransitionProps={{ timeout: 600 }}\r\n                                title={album.Artists[0] && `by ${album.Artists[0]?.artistName}`}>\r\n                                <span>{album.albumName}</span>\r\n                            </Tooltip>\r\n                                <IconButton>\r\n                            <Link to={`/album/${album.id}`}>\r\n                                    <Avatar alt=\"artist img\" src={album.albumCoverImg}/>                                    </Link>\r\n                                </IconButton>\r\n                        </div> \r\n                    ))}\r\n            </div>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import { useState, useEffect } from 'react';\r\n\r\n// Our hook\r\nexport default function useDebounce(value, delay) {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    [value] \r\n  );\r\n\r\n  return debouncedValue;\r\n}","import React from 'react';\r\n\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error) {\r\n      // Update state so the next render will show the fallback UI.\r\n      return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error, errorInfo) {\r\n      // You can also log the error to an error reporting service\r\n      console.error(error, errorInfo);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) {\r\n        // You can render any custom fallback UI\r\n        return <h1>Something went wrong... please refresh</h1>;\r\n      }\r\n  \r\n      return this.props.children; \r\n    }\r\n  }","import React, { useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\nimport 'fontsource-roboto';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport Search from './Search'\r\nimport { User } from '../contexts/userContext';\r\nimport ErrorBoundary from './ErrorBoundary';\r\n\r\n\r\nfunction Sidebar() {\r\n\r\n    const [sideBarOpen, setSideBarOpen] = useState(true)\r\n    const user = useContext(User)\r\n\r\n    const logOut = async () => {\r\n        try {\r\n            Cookies.remove(\"accessToken\")\r\n            Cookies.remove(\"refreshToken\")\r\n            Cookies.remove(\"id\")\r\n          window.location = '/';\r\n        } catch (error) {\r\n          console.error(error)\r\n        }\r\n      }\r\n\r\n  return (\r\n    <div>\r\n        <ProSidebar id={\"side-bar\"} collapsed={sideBarOpen}\r\n        image={\"https://media.pri.org/s3fs-public/story/images/Music%20Listening.jpg\"}\r\n        >\r\n            <Menu iconShape=\"circle\">\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <MenuItem icon={<MenuIcon/>} onClick={()=>{setSideBarOpen(!sideBarOpen)}}></MenuItem>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <MenuItem icon={<HomeIcon/>}>\r\n                Home\r\n            <Link to=\"/\" />\r\n            </MenuItem>\r\n            <MenuItem icon={<AudiotrackIcon/>}>\r\n                All songs \r\n            <Link to=\"/Allsongs\" />\r\n            </MenuItem>\r\n            <MenuItem icon={<RecordVoiceOverIcon/>}>\r\n                All Artists \r\n            <Link to=\"/AllArtists\"/>\r\n            </MenuItem>\r\n            <MenuItem icon={<LibraryMusicIcon/>}>\r\n                All Playlists \r\n            <Link to=\"/Allplaylists\"/>\r\n            </MenuItem>\r\n            <SubMenu title=\"Search\" icon={<SearchIcon/>}>\r\n                <ErrorBoundary>\r\n                <Search></Search>\r\n                </ErrorBoundary>\r\n            </SubMenu>\r\n            { user.isAdmin && \r\n            <SubMenu title=\"My user\" icon={<AccountCircleIcon/>}>\r\n                <MenuItem>Admin <Link to=\"/Admin\"/></MenuItem>\r\n            </SubMenu>\r\n            }\r\n                <MenuItem icon={<ExitToAppIcon/>} onClick={logOut}>\r\n                    log out\r\n                </MenuItem>\r\n            </Menu>\r\n        </ProSidebar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Topbar() {\r\n\r\n  return (\r\n    <div id={\"top-bar\"}>\r\n      <Link to={'/'}>\r\n      <img src={\"https://i.pinimg.com/originals/2f/cc/e8/2fcce87dd6b29a3a8615cb9e6f434af6.png\"} alt={\"app-icon\"}></img>\r\n      </Link>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Topbar;\r\n","import React from 'react';\r\nimport { create } from \"../../../wrappers/ajax\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useForm} from 'react-hook-form'\r\nimport Loader from '../../Loader'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  // avatar: {\r\n  //   margin: theme.spacing(1),\r\n  //   backgroundColor: theme.palette.primary.main,\r\n  // },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: \"10px\",\r\n    gap: \"15px\"\r\n  },\r\n}));;\r\n\r\nfunction AddSong({ artists, albums }) {\r\n  const classes = useStyles();\r\n\r\n  const {register: newSong, handleSubmit: handleNewSong} = useForm()\r\n\r\n \r\n\r\n  const onSubmitSong = data => {\r\n    create(\"api/v1/songs/add\", data)\r\n  } \r\n\r\n  \r\n  return (\r\n    <div className={\"admin-section\"} style={{backgroundColor: \"rgb(99,84,65)\"}}>\r\n        <form  \r\n          className={classes.form} \r\n          noValidate onSubmit={handleNewSong(onSubmitSong)}>\r\n            <h1>Add song</h1>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={newSong}\r\n            required\r\n            label=\"Youtube Link (Embded Code)\"\r\n            name=\"youtube_link\"\r\n            autoFocus\r\n            />\r\n        <div className={\"add-artist-container\"}>\r\n            <div>\r\n              <InputLabel id=\"label\">album</InputLabel>\r\n              <Select placeholder=\"albums\" native inputRef={newSong} name=\"albumId\" variant=\"outlined\">\r\n              {albums.map(album => (<option key={album.albumName} value={album.id}>{album.albumName}</option>))}\r\n              </Select>\r\n            </div>\r\n            <div className=\"add-artist-modal\">\r\n            </div>\r\n        </div>\r\n        <div className={\"add-artist-container\"}>\r\n            <div>\r\n              <InputLabel id=\"label\">Artist</InputLabel>\r\n              <Select placeholder=\"artists\" native inputRef={newSong} name=\"artistId\" variant=\"outlined\">\r\n              {artists.map(artist => (<option key={artist.artistName} value={artist.id}>{artist.artistName}</option>))}\r\n              </Select>\r\n            </div>\r\n            <div className=\"add-artist-modal\">\r\n            </div>\r\n        </div>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={newSong}\r\n            required\r\n            name=\"songName\"\r\n            label=\"Name\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={newSong}\r\n            required\r\n            name=\"length\"\r\n            label=\"Length: HH:MM:SS\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Add song\r\n          </Button>\r\n        </form>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default AddSong;\r\n","import React from 'react';\r\nimport { create } from \"../../../wrappers/ajax\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useForm} from 'react-hook-form'\r\nimport Loader from '../../Loader'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: \"10px\",\r\n    gap: \"15px\"\r\n  },\r\n}));;\r\n\r\n\r\nfunction AddArtist() {\r\n  const classes = useStyles();\r\n  const {register: newArtist, handleSubmit: handleNewArtist} = useForm()\r\n\r\n  const onSubmitArtist = data => {\r\n    create(\"api/v1/artists/add\", data)\r\n  } \r\n\r\n  return (\r\n    <div className={\"admin-section\"} style={{backgroundColor: \"rgba(43,19,21,0.9)\"}}>\r\n      <form  \r\n        className={classes.form}\r\n        noValidate onSubmit={handleNewArtist(onSubmitArtist)}\r\n      >\r\n        <h1 component=\"h1\" variant=\"h5\">Add a new artist</h1>\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={newArtist}\r\n            required\r\n            name=\"artistName\"\r\n            label=\"Name\"\r\n        />\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={newArtist}\r\n            required\r\n            name=\"artistCoverImg\"\r\n            label=\"Cover image\"\r\n        />\r\n        <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            inputRef={newArtist}\r\n        >\r\n            Add artist\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddArtist;\r\n","import React from 'react';\r\nimport { create } from \"../../../wrappers/ajax\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useForm} from 'react-hook-form'\r\nimport Loader from '../../Loader'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: \"10px\",\r\n    gap: \"15px\"\r\n  },\r\n}));;\r\n\r\n\r\nfunction AddAlbum({ artists }) {\r\n  const classes = useStyles();\r\n  const {register: newAlbum, handleSubmit: handleNewAlbum} = useForm()\r\n\r\n  const onSubmitAlbum = data => {\r\n    create(\"api/v1/albums/add\", data)\r\n  } \r\n  \r\n  return (\r\n    artists != null ?\r\n    <div className={\"admin-section\"} style={{backgroundColor: \"rgba(0,31,63,0.8)\"}} >\r\n        <form  \r\n        className={classes.form}\r\n        noValidate onSubmit={handleNewAlbum(onSubmitAlbum)}>\r\n        <h1>Add a new Album</h1>\r\n        <div>\r\n          <InputLabel id=\"label\">Artist</InputLabel>\r\n          <Select fullWidth placeholder=\"artists\" native inputRef={newAlbum} name=\"artistId\" variant=\"outlined\">\r\n            {artists.map(artist => (<option key={artist.artistName} value={artist.id}>{artist.artistName}</option>))}\r\n          </Select>\r\n        </div>\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={newAlbum}\r\n            required\r\n            name=\"albumName\"\r\n            label=\"Name\"\r\n        />\r\n        <TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        inputRef={newAlbum}\r\n        required\r\n        name=\"albumCoverImg\"\r\n        label=\"album cover image\"\r\n        />\r\n        <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            inputRef={newAlbum}\r\n        >\r\n            Add album\r\n        </Button>\r\n        </form>\r\n      </div>\r\n    : <Loader/>\r\n  );\r\n}\r\n\r\nexport default AddAlbum;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { read } from \"../../../wrappers/ajax\"\r\nimport AddSong from './AddSong';\r\nimport AddArtist from './AddArtist';\r\nimport AddAlbum from './AddAlbum';\r\nimport { mixpanelTrackUrlChanged } from '../../../analytics/analyticsManager'\r\nimport ErrorBoundary from '../../ErrorBoundary';\r\n\r\nfunction Admin() {\r\n  const [artists, setArtists] = useState([])\r\n  const [albums, setAlbums] = useState([]);\r\n\r\n  const location = useLocation();\r\n  \r\n  useEffect(() => {\r\n    mixpanelTrackUrlChanged(location.pathname)\r\n  },[])\r\n\r\n  const fetchData = () => {\r\n    read(\"api/v1/artists\").then((res) => {\r\n      setArtists(res)\r\n    });\r\n      read(\"api/v1/albums\").then((res) => {\r\n        setAlbums(res)\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  \r\n  return (\r\n\r\n    <div className=\"page\" >\r\n      <ErrorBoundary>\r\n        <AddSong albums={albums} artists={artists}></AddSong>\r\n      </ErrorBoundary>\r\n      <ErrorBoundary>\r\n        <AddAlbum artists={artists}></AddAlbum>\r\n      </ErrorBoundary>\r\n      <ErrorBoundary>\r\n        <AddArtist></AddArtist>\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { read } from \"../../wrappers/ajax\"\r\nimport Song from '../Song'\r\nimport Loader from '../Loader'\r\nimport { mixpanelTrackUrlChanged } from '../../analytics/analyticsManager'\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Allsongs({ setSongToPlay }) {\r\n    const [songs, setSongs] = useState([]);\r\n    const [likeState, setLikeState] = useState(false);\r\n    const location = useLocation();\r\n  \r\n    useEffect(() => {\r\n      mixpanelTrackUrlChanged(location.pathname)\r\n    },[])\r\n\r\n\r\n    useEffect(() => {\r\n      read(`/api/v1/songs`).then((res) => {\r\n        setSongs(res)\r\n      });\r\n    }, [likeState]);\r\n  \r\n  return (\r\n  songs.length > 0  ?\r\n  <div className=\"page\">\r\n    <p>All Songs</p>\r\n    <div className={\"all-songs-container\"}>\r\n      {songs && songs.map((song, i) => (\r\n          <Song\r\n            key={song.song_id}\r\n            song={song}\r\n            setSongToPlay={setSongToPlay}\r\n            likeState={likeState}\r\n            setLikeState={setLikeState}\r\n          >\r\n          </Song>\r\n      ))}\r\n    </div>\r\n  </div>\r\n  : <Loader/>\r\n  );\r\n}\r\n\r\nexport default Allsongs;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { read } from \"../../wrappers/ajax\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'fontsource-roboto';\r\nimport Loader from '../Loader'\r\nimport { mixpanelTrackUrlChanged } from '../../analytics/analyticsManager'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList: {\r\n      width: \"50vw\",\r\n      height: \"max-content\",\r\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n      transform: 'translateZ(0)',\r\n    },\r\n    titleBar: {\r\n      background:\r\n        'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\r\n        'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n    },\r\n    icon: {\r\n      color: 'white',\r\n    },\r\n  }));\r\n\r\nfunction AllArtists() {\r\n\r\n    const [artists, setArtists] = useState()\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n  \r\n    useEffect(() => {\r\n      mixpanelTrackUrlChanged(location.pathname)\r\n    },[])\r\n\r\n    useEffect(() => {\r\n      read(\"api/v1/artists\").then((res) => {\r\n        setArtists(res)\r\n      });\r\n    }, []);\r\n  \r\n  return (\r\n    <div className=\"page\">\r\n    {artists != null ?\r\n        <div className={\"all-artists-container\"}>\r\n        <p  className=\"all-artists-header\">All Artists</p>\r\n            <div className={classes.root}>\r\n                <GridList cellHeight={150} spacing={2} className={classes.gridList}>\r\n                    {artists.map((artist) => (\r\n                      <GridListTile key={artist.artisName} cols={1}>\r\n                            <img src={artist.artistCoverImg} alt={artist.artistName} />\r\n                              <Link to={`/artist/${artist.id}`}>\r\n                            <GridListTileBar\r\n                                title={artist.artistName}\r\n                                titlePosition=\"top\"\r\n                                actionIcon={\r\n                                  <IconButton aria-label={`star ${artist.artistName}`} className={classes.icon}>\r\n                                  <StarBorderIcon></StarBorderIcon>\r\n                                  </IconButton>\r\n                                }\r\n                                actionPosition=\"left\"\r\n                                className={classes.titleBar}\r\n                                />\r\n                                </Link>\r\n                        </GridListTile>\r\n                    ))}\r\n                </GridList>\r\n            </div>\r\n        </div>\r\n        : <Loader/>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllArtists;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { read, create } from \"../../wrappers/ajax\"\r\nimport Playlist from '../Playlist';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {useForm} from 'react-hook-form'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Loader from '../Loader'\r\nimport { mixpanelTrackUrlChanged } from '../../analytics/analyticsManager'\r\n\r\n\r\nfunction Allplaylists() {\r\n\r\n    const [playlists, setPlaylists] = useState([])\r\n    const [open, setOpen] = useState(false);\r\n    const {register: addNewPlaylist, handleSubmit: handleAddNewPlaylist} = useForm()\r\n    const location = useLocation();\r\n  \r\n    useEffect(() => {\r\n      mixpanelTrackUrlChanged(location.pathname)\r\n    },[])\r\n\r\n\r\n    useEffect(() => {\r\n      read(\"/api/v1/playlists\").then((res) => {\r\n        setPlaylists(res)\r\n      });\r\n    }, []);\r\n\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const onAddNewPlaylist = data => {\r\n      create(\"/playlists/add\", data);\r\n      handleClose()\r\n    } \r\n\r\n  return (\r\n  playlists != null ?\r\n  <div className=\"page\">\r\n      <p>All Playlists</p>\r\n      <Tooltip \r\n        title=\"create new playlist\" placement={\"bottom\"}\r\n        TransitionProps={{ timeout: 600 }}>\r\n        <IconButton aria-label=\"add\" variant=\"outlined\" onClick={handleClickOpen}>\r\n          <AddIcon/>\r\n        </IconButton>\r\n      </Tooltip>\r\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Add to Playlist</DialogTitle>\r\n        <DialogContent>\r\n        </DialogContent>\r\n          <form  \r\n            noValidate onSubmit={handleAddNewPlaylist(onAddNewPlaylist)}>\r\n            <div>\r\n            <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"playlistName\"\r\n            label=\"playlist name\"\r\n            inputRef={addNewPlaylist}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"playlistCoverImg\"\r\n            label=\"playlist cover image (URL)\"\r\n            inputRef={addNewPlaylist}\r\n            fullWidth\r\n          />\r\n            </div>\r\n          <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          style={{marginBottom:\"5px\"}}\r\n          inputRef={addNewPlaylist}>\r\n            Add\r\n          </Button>\r\n          <Button onClick={handleClose}\r\n          color=\"primary\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          </form>\r\n        <DialogActions>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div className=\"page\">\r\n        <div className={\"all-playlists-container\"}>\r\n          {playlists && playlists.map(playlist => (\r\n            <Playlist\r\n            key={playlist.id}\r\n            playlist={playlist}\r\n            >\r\n            </Playlist>\r\n          ))}\r\n        </div>\r\n      </div>\r\n  </div>\r\n  : <Loader/>\r\n  );\r\n}\r\n\r\nexport default Allplaylists;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { read } from \"../../wrappers/ajax\"\r\nimport 'fontsource-roboto';\r\nimport Song from '../Song'\r\nimport { useParams, useLocation, Link } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { brown } from '@material-ui/core/colors';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport likeFunction from \"../../wrappers/likeFunction\"\r\nimport Loader from '../Loader'\r\nimport { mixpanelTrackUrlChanged, mixpanelTrackSongLiked, mixpanelTrackSongUnliked  } from '../../analytics/analyticsManager'\r\nimport { User } from '../../contexts/userContext';\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '130%',\r\n    backgroundColor: brown[500],\r\n    marginLeft: \"20px\"\r\n  },\r\n  paper: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    backgroundColor: brown[500],\r\n    marginRight: \"20px\",\r\n    textAlign: \"center\",\r\n  }\r\n}));\r\n\r\n\r\nfunction SingleSong({ setSongToPlay }) {\r\n  \r\n  let { id } = useParams(); \r\n  const [singleSongObject, setSingleSongObject] = useState();\r\n  const [songsFromQuery, setSongsFromQuery] = useState();\r\n  const [likeState, setLikeState] = useState(false);\r\n  const [singlePlaylistObject, setSinglePlaylistObject] = useState()\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    mixpanelTrackUrlChanged(location.pathname)\r\n  },[])\r\n\r\n  function useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n  }\r\n\r\n  const query = useQuery()\r\n  const user = useContext(User);\r\n  const artistQuery = query.get(\"artist\");\r\n  const albumQuery = query.get('album');\r\n  const playlistQuery = query.get(\"playlist\");\r\n  const queryKey = albumQuery !== null ? `album` : artistQuery !== null ? 'artist' : 'playlist';\r\n  const queryValue = albumQuery !== null ? albumQuery : artistQuery !== null ? artistQuery : playlistQuery;\r\n\r\n    useEffect(() => {\r\n      read(`/api/v1/songs/${id}`).then((res) => {\r\n        setSingleSongObject(res)\r\n      });\r\n    }, [id, likeState]);\r\n\r\n    useEffect(() => {\r\n        read(`/api/v1/${queryKey}s/${queryValue}`).then((res) => {\r\n          setSongsFromQuery(res);\r\n        })\r\n      }, [likeState]);\r\n\r\n      const handleLike = (song) => {\r\n        likeFunction(song, user); \r\n        setLikeState(!likeState); \r\n        likeState ? \r\n        mixpanelTrackSongUnliked(song.songName)\r\n        : mixpanelTrackSongLiked(song.songName) \r\n      }\r\n  \r\n  return (\r\n  singleSongObject && songsFromQuery ?\r\n  <div className=\"page\">\r\n    <div className=\"single-page\">\r\n      <Song\r\n      key={singleSongObject.song_id}\r\n      song={singleSongObject}\r\n      setSongToPlay={setSongToPlay}\r\n      likeState={likeState}\r\n      setLikeState={setLikeState}>\r\n      </Song>\r\n      <div className=\"suggested-songs\">\r\n        <List className={classes.root}\r\n          subheader={\r\n                <Link to={`/${queryKey}/${queryValue}`}>\r\n            <ListSubheader component=\"p\">\r\n              {  songsFromQuery.Songs.length > 1 ? <h5>related songs from \r\n                {albumQuery ? \r\n                ' ' + songsFromQuery.albumName :\r\n                artistQuery ? \r\n                ' ' + songsFromQuery.artistName :\r\n                playlistQuery &&\r\n                ' ' + songsFromQuery.playlistName + ' playlist'}</h5>\r\n                : <h5>this is the only song from this {queryKey}</h5>}\r\n            </ListSubheader>\r\n            </Link>\r\n          }>\r\n          {songsFromQuery.Songs.filter(song => song.songName !== singleSongObject.songName).map((song, i) => (\r\n            <ListItem key={i} role={undefined} dense>\r\n              <Link \r\n              to={`/song/${song.id}?${queryKey}=${queryValue}`}\r\n              style={{color: 'black'}}>\r\n                <ListItemText primary={`${song.songName}`} />\r\n              </Link>\r\n              <ListItemSecondaryAction>\r\n                <Tooltip \r\n                  title={\"add/remove from favorites\"} placement={\"right\"}\r\n                  TransitionComponent={Fade} TransitionProps={{ timeout: 600 }}>\r\n                  <IconButton\r\n                    edge=\"end\"\r\n                    aria-label=\"like\"\r\n                    onClick={() => {handleLike(song)}}>\r\n                    <FavoriteIcon  color={song.Interactions[0] && song.Interactions[0].isLiked === true ? 'secondary' : 'inherit'}>\r\n                    </FavoriteIcon>\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  : <Loader/>\r\n  );\r\n}\r\n\r\nexport default SingleSong;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { read } from \"../../wrappers/ajax\"\r\nimport 'fontsource-roboto';\r\nimport { useParams, Link, useLocation } from \"react-router-dom\";\r\nimport Album from '../Album';\r\nimport { brown } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport likeFunction from \"../../wrappers/likeFunction\"\r\nimport Loader from '../Loader'\r\nimport { mixpanelTrackUrlChanged, mixpanelTrackSongLiked, mixpanelTrackSongUnliked  } from '../../analytics/analyticsManager'\r\nimport { User } from '../../contexts/userContext';\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '139%',\r\n    maxWidth: 360,\r\n    backgroundColor: brown[500],\r\n    marginLeft: \"20px\"\r\n  },\r\n}));\r\n\r\nfunction SingleAlbum({ setSongToPlay }) {\r\n  const location = useLocation();\r\n  \r\n  useEffect(() => {\r\n    mixpanelTrackUrlChanged(location.pathname)\r\n  },[])\r\n  \r\n  let { id } = useParams() \r\n  const user = useContext(User);\r\n  const [singleAlbum, setSingleAlbum] = useState();\r\n  const [likeState, setLikeState] = useState(false)\r\n  const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n      read(`/api/v1/albums/${id}`).then((res) => {\r\n        setSingleAlbum(res)\r\n      });\r\n    }, [id, likeState]);\r\n\r\n    const handleLike = (song) => {\r\n      likeFunction(song, user); \r\n      setLikeState(!likeState); \r\n      likeState ? \r\n      mixpanelTrackSongUnliked(song.songName)\r\n      : mixpanelTrackSongLiked(song.songName) \r\n    }\r\n  \r\n  return (\r\n    singleAlbum ?\r\n  <div className=\"page\">\r\n    <div className=\"single-page\">\r\n            <Album\r\n              key={singleAlbum.id}\r\n              album={singleAlbum}\r\n              setSongToPlay={setSongToPlay}\r\n            >\r\n            </Album>\r\n            <div className=\"suggested-songs\">\r\n              <List className={classes.root}\r\n                subheader={\r\n                  <ListSubheader component=\"p\">\r\n                    more songs from {singleAlbum.albumName} \r\n                  </ListSubheader>\r\n                }>\r\n                {singleAlbum.Songs.map((song) => (\r\n                  <ListItem key={song.id} role={undefined} dense button>\r\n                    <Link \r\n                    to={`/song/${song.id}?album=${song.albumId}`}\r\n                    style={{color: 'black'}}>\r\n                      <ListItemText primary={`${song.songName}`} />\r\n                    </Link>\r\n                    <ListItemSecondaryAction>\r\n                      <IconButton\r\n                        edge=\"end\"\r\n                        aria-label=\"like\"\r\n                        onClick={() => {handleLike(song)}}>\r\n                        <FavoriteIcon  color={song.Interactions[0] && song.Interactions[0].isLiked === true ? 'secondary' : 'inherit'}>\r\n                        </FavoriteIcon>\r\n                      </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n              </div>\r\n    </div>\r\n  </div>\r\n  : <Loader/>\r\n  );\r\n}\r\n\r\nexport default SingleAlbum;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { read } from \"../../wrappers/ajax\"\r\nimport 'fontsource-roboto';\r\nimport Playlist from '../Playlist'\r\nimport { useParams } from \"react-router-dom\";\r\nimport Loader from '../Loader'\r\nimport { mixpanelTrackUrlChanged } from '../../analytics/analyticsManager'\r\n\r\n\r\nfunction SinglePlaylist({ props, singleSong }) {\r\n  let { id } = useParams() \r\n  const location = useLocation();\r\n\r\n  const [singlePlaylistObject, setSinglePlaylistObject] = useState()\r\n  \r\n  useEffect(() => {\r\n    mixpanelTrackUrlChanged(location.pathname)\r\n  },[])\r\n\r\n    useEffect(() => {\r\n      read(`/api/v1/playlists/${id}`).then((res) => {\r\n        setSinglePlaylistObject(res)\r\n      });\r\n    }, [id]);\r\n  \r\n    return (\r\n      singlePlaylistObject ?\r\n        <div className=\"page\">\r\n          <div className=\"single-page\">\r\n            <Playlist\r\n              key={singlePlaylistObject.id}\r\n              playlist={singlePlaylistObject}\r\n            >\r\n            </Playlist>\r\n          </div>\r\n        </div>\r\n        : <Loader/>\r\n        );\r\n}\r\n\r\nexport default SinglePlaylist;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { read } from \"../../wrappers/ajax\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport 'fontsource-roboto';\r\nimport Artist from '../Artist'\r\nimport { useParams, Link, useLocation } from \"react-router-dom\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport { brown } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport likeFunction from \"../../wrappers/likeFunction\"\r\nimport Loader from '../Loader'\r\nimport { mixpanelTrackUrlChanged, mixpanelTrackSongLiked, mixpanelTrackSongUnliked  } from '../../analytics/analyticsManager'\r\nimport { User } from '../../contexts/userContext';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '150%',\r\n    maxWidth: 360,\r\n    backgroundColor: brown[500],\r\n    marginLeft: \"20px\"\r\n  },\r\n}))\r\n\r\nfunction SinglePlaylist({ props, singleSong }) {\r\n  let { id } = useParams() \r\n  const user = useContext(User);\r\n  const [singleArtist, setSingleArtist] = useState({})\r\n  const [likeState, setLikeState] = useState(false); \r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  \r\n  useEffect(() => {\r\n    mixpanelTrackUrlChanged(location.pathname)\r\n  },[])\r\n\r\n\r\n    useEffect(() => {\r\n      read(`/api/v1/artists/${id}`).then((res) => {\r\n        setSingleArtist(res)\r\n      });\r\n    },[likeState]);\r\n\r\n    const handleLike = (song) => {\r\n      likeFunction(song, user); \r\n      setLikeState(!likeState); \r\n      likeState ? \r\n      mixpanelTrackSongUnliked(song.songName)\r\n      : mixpanelTrackSongLiked(song.songName) \r\n    }\r\n  \r\n    return (\r\n      singleArtist.artistName ? \r\n        <div className=\"page\">\r\n          <div className=\"single-page\">\r\n            <Artist\r\n              key={singleArtist.id}\r\n              artist={singleArtist}\r\n            >\r\n            </Artist>\r\n            <div className=\"suggested-songs\">\r\n              <List className={classes.root}\r\n                subheader={\r\n                  <ListSubheader component=\"p\">\r\n                    suggestes songs from {singleArtist.artistName}\r\n                  </ListSubheader>\r\n                }>\r\n                {singleArtist.Songs.map((song) => {\r\n                  return <ListItem key={song.id} role={undefined} dense>\r\n                      <Link \r\n                      to={`/song/${song.id}?artist=${singleArtist.id}`}\r\n                      style={{color: 'black'}}>\r\n                    <ListItemText primary={`${song.songName}`} />\r\n                    </Link>\r\n                    <ListItemSecondaryAction>\r\n                      <IconButton\r\n                        edge=\"end\"\r\n                        aria-label=\"like\"\r\n                        onClick={()=> {handleLike(song)}}>\r\n                        <FavoriteIcon  color={song.Interactions[0] && song.Interactions[0].isLiked === true ? 'secondary' : 'inherit'}>\r\n                        </FavoriteIcon>\r\n                      </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n              })}\r\n              </List>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        : <Loader/>\r\n        );\r\n}\r\n\r\nexport default SinglePlaylist;\r\n","import React, { useContext } from 'react';\r\nimport { User } from '../../contexts/userContext';\r\nimport 'fontsource-roboto';\r\nimport Draggable from 'react-draggable';\r\nimport { brown } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Player({ songToPlay }) {\r\n  const user = useContext(User)\r\n\r\n  return (\r\n    <Draggable>\r\n      <div className=\"player\">\r\n        <h5>{songToPlay ? \"Drag Me!\" : `Hey ${user.userName}! Your Songs Will Play Here`}</h5>\r\n        <div className={\"iframe\"} >\r\n          {songToPlay &&\r\n          <iframe title={\"player\"} src={\r\n            `${songToPlay.youtubeLink}?autoplay=1`}\r\n            className={\"video\"}\r\n            allow={\"autoplay\"}\r\n            frameBorder={0}\r\n            height={\"100%\"} width={\"100%\"}></iframe>\r\n          }\r\n        </div>     \r\n      </div>\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default Player;\r\n","import React, { useState } from 'react';\r\nimport { create } from \"../../../wrappers/ajax\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { Typography, Checkbox } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useForm} from 'react-hook-form'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));;\r\n\r\nfunction Login({ setUser }) {\r\n  const classes = useStyles();\r\n\r\n  const {register: Login, errors, handleSubmit: handleLogin} = useForm()\r\n  const [loginError, setLoginError] = useState(false)\r\n\r\n  const onLogin = data => {\r\n    create(\"/api/v1/auth/login\", data).then(res => {\r\n      if (res.success) {\r\n        window.location = '/';\r\n      } else {\r\n        setLoginError(true)\r\n      }\r\n    }).catch(err => {\r\n      setLoginError(true);\r\n    })\r\n  }\r\n\r\n  \r\n  return (\r\n    <div className={\"login-section\"} style={{backgroundColor: \"rgb(99,84,65)\"}}>\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <AccountCircleIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Login\r\n        </Typography>\r\n        <form  \r\n          className={classes.form} \r\n          noValidate onSubmit={handleLogin(onLogin)}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\" \r\n            inputRef={Login({required: true, minLength: 10})}\r\n            fullWidth\r\n            label=\"email\"\r\n            name=\"email\"\r\n            autoFocus\r\n          />\r\n          {errors.email?.type === \"required\" && <p className=\"auth-error\">Please Enter mail</p>}\r\n          {errors.email?.type === \"minLength\" && <p className=\"auth-error\">Please Enter valid mail</p>}\r\n        <div className={\"add-artist-container\"}>\r\n        </div>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={Login({minLength: 6})}\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"password\"\r\n            type=\"password\"\r\n          />\r\n          {errors.password?.type === \"minLength\" && \r\n          <p className=\"auth-error\">Your password must be 6 digits</p>}\r\n          <Checkbox\r\n            inputRef={Login}\r\n            fullWidth\r\n            name=\"rememberMe\"\r\n            type=\"checkbox\"\r\n            label=\"remember me\">\r\n          </Checkbox>\r\n          <span>remember me</span>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Login\r\n          </Button>\r\n          <Button\r\n            onClick={()=>{window.location = '/signUp'}}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.submit}\r\n          >\r\n            SignUp\r\n          </Button>\r\n          {loginError && \"wrong email / password please try again\"}\r\n        </form>\r\n      </div>\r\n    </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { create } from \"../../../wrappers/ajax\"\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useForm} from 'react-hook-form'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));;\r\n\r\nfunction SignUp() {\r\n  const classes = useStyles();\r\n\r\n  const {register: signUp, errors, handleSubmit: handleSignUp} = useForm()\r\n\r\n  const onSignUp = data => {\r\n    create(\"/api/v1/users/add\", data);\r\n    window.location = '/';\r\n  } \r\n  \r\n  return (\r\n    <div className={\"login-section\"} style={{backgroundColor: \"rgb(99,84,65)\"}}>\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <AccountCircleIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n            Not a member?\r\n        </Typography>\r\n        <form  \r\n          className={classes.form} \r\n          noValidate onSubmit={handleSignUp(onSignUp)}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={signUp({required: true, minLength: 4})}\r\n            required\r\n            fullWidth\r\n            label=\"username\"\r\n            name=\"userName\"\r\n            autoFocus\r\n            />\r\n            {errors.userName?.type === \"required\" && <p className=\"auth-error\">Please Enter username</p>}\r\n            {errors.userName?.type === \"minLength\" && <p className=\"auth-error\">Your username must be 4 digits</p>}\r\n        <div className={\"add-artist-container\"}>\r\n        </div>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={signUp({required: true, minLength: 6})}\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"password\"\r\n            type=\"password\"\r\n          />\r\n          {errors.password?.type === \"required\" && <p className=\"auth-error\">Please Enter password</p>}\r\n          {errors.password?.type === \"minLength\" && <p className=\"auth-error\">Your password must be 6 digits</p>}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputRef={signUp({required: true, minLength: 10})}\r\n            required\r\n            fullWidth\r\n            name=\"email\"\r\n            label=\"email\"\r\n          />\r\n          {errors.email?.type === \"required\" && <p className=\"auth-error\">Please Enter mail</p>}\r\n          {errors.email?.type === \"minLength\" && <p className=\"auth-error\">Please Enter valid mail</p>}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <span>already a member? <Link to=\"/\">sign in</Link></span>\r\n    </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport { User } from './contexts/userContext';\r\nimport './App.css';\r\nimport Cookies from 'js-cookie';\r\nimport 'fontsource-roboto';\r\nimport Home from './components/pages/Home/Home';\r\nimport Sidebar from './components/Sidebar';\r\nimport Topbar from './components/Topbar';\r\nimport Admin from './components/pages/Admin/Admin';\r\nimport Allsongs from './components/pages/Allsongs';\r\nimport AllArtists from './components/pages/AllArtists';\r\nimport Allplaylists from './components/pages/Allplaylists';\r\nimport SingleSong from './components/pages/SingleSong';\r\nimport SingleAlbum from './components/pages/SingleAlbum';\r\nimport SinglePlaylist from './components/pages/SinglePlaylist';\r\nimport SingleArtist from './components/pages/SingleArtist';\r\nimport Player from './components/pages/Player';\r\nimport Login from './components/pages/Identification/Login';\r\nimport Signup from './components/pages/Identification/Signup';\r\nimport { read } from \"./wrappers/ajax\"\r\nimport { mixpanelTrackLoggedIn, mixpanelTrackEnteredLoginPage } from \"./analytics/analyticsManager\";\r\nimport ErrorBoundary from './components/ErrorBoundary';\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [songToPlay, setSongToPlay] = useState();\r\n  const [logged, setLogged] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [user, setUser] = useState();\r\n\r\n  useEffect(() => {// auth\r\n    (async () => {\r\n      if (Cookies.get(\"accessToken\")) {\r\n        try {\r\n          const data = await read(\"/api/v1/auth/validateToken\");\r\n          setLogged(data);\r\n          const userId = Cookies.get('id');\r\n          const userLogged = await read(`api/v1/users/id/${userId}`);\r\n          setUser(userLogged);\r\n          setLoading(false);\r\n          mixpanelTrackLoggedIn()\r\n        } catch (e) {\r\n          setLoading(false)\r\n        }\r\n      } else {\r\n        setLoading(false);\r\n        mixpanelTrackEnteredLoginPage()\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    {\r\n        !loading ?\r\n          !logged ?\r\n          <Router>\r\n          <Switch>\r\n            <Route path={'/'} exact> <Login></Login></Route>\r\n            <Route path={'/signUp'} exact> <Signup/> </Route>\r\n            <Route path={'*'} exact> <Login></Login></Route>\r\n          </Switch> \r\n          </Router>\r\n          : \r\n          <User.Provider value={user}>\r\n          <Router>\r\n            <Topbar></Topbar>\r\n            <Sidebar></Sidebar>\r\n            <ErrorBoundary>\r\n              <Player songToPlay={songToPlay}></Player>\r\n            </ErrorBoundary>\r\n              <Switch>\r\n                <Route path={\"/\"} exact> <Home setSongToPlay={setSongToPlay}> </Home> </Route>\r\n                <Route path=\"/Allsongs\"> <Allsongs setSongToPlay={setSongToPlay}> </Allsongs> </Route>\r\n                <Route path=\"/Allartists\" exact> <AllArtists/> </Route>\r\n                <Route path=\"/Allplaylists\" exact> <Allplaylists/> </Route>\r\n                <Route path=\"/playlist/:id\" exact> <SinglePlaylist/> </Route>\r\n                <Route path=\"/song/:id\" exact> <SingleSong setSongToPlay={setSongToPlay}></SingleSong> </Route>\r\n                <Route path=\"/album/:id\" exact> <SingleAlbum setSongToPlay={setSongToPlay}></SingleAlbum> </Route>\r\n                <Route path=\"/artist/:id\" exact> <SingleArtist setSongToPlay={setSongToPlay}></SingleArtist></Route>\r\n                {user.isAdmin && <Route path=\"/Admin\" exact> <Admin/> </Route>}\r\n              </Switch>\r\n            </Router>\r\n          </User.Provider>\r\n        : <div>loading...</div>\r\n      }\r\n      </div>\r\n      );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}